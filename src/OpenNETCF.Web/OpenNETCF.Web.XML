<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenNETCF.Web</name>
    </assembly>
    <members>
        <member name="M:OpenNETCF.Web.UI.PageParserFilter.PreprocessDirective(System.String,System.Collections.IDictionary)">
            <summary>
            Allows the page parser filter to preprocess page directives. 
            </summary>
            <param name="directiveName"></param>
            <param name="attributes"></param>
            <remarks>The page parser calls the PreprocessDirective method for each directive encountered during parsing.</remarks>
        </member>
        <member name="P:OpenNETCF.Web.UI.PageParserFilter.VirtualPath">
            <summary>
            Gets the virtual path to the page currently being parsed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.PageParserFilter.AllowCode">
            <summary>
            Gets a value indicating whether a Padarn parser filter permits code on the page. 
            </summary>
            <remarks>
            For Padarn, this is always <b>false</b>.
            </remarks>
        </member>
        <member name="T:OpenNETCF.Web.HttpWorkerRequest">
            <summary>
            This abstract class defines the base worker methods and enumerations used by PS managed code to process requests.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.EndOfRequest">
            <summary>
            Used by the runtime to notify the HttpWorkerRequest that request processing for the current request is complete.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.FlushResponse(System.Boolean)">
            <summary>
            Sends all pending response data to the client.
            </summary>
            <param name="finalFlush">true if this is the last time response data will be flushed; otherwise, false.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.ReadRequestHeaders">
            <summary>
            Read the headers from the request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.ProcessRequest">
            <summary>
            Process the HTTP request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetUriPath">
            <summary>
            Returns the virtual path to the requested URI
            </summary>
            <returns>The path to the requested URI.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetLocalAddress">
            <summary>
            Provides access to the specified member of the request header.
            </summary>
            <returns>The server IP address returned in the request header.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetLocalPort">
            <summary>
            Provides access to the specified member of the request header.
            </summary>
            <returns>The server port number returned in the request header.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetHttpVersion">
            <summary>
            Provides access to the HTTP version of the request (for example, "HTTP/1.1").
            </summary>
            <returns>The HTTP version returned in the request header.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetHttpVerbName">
            <summary>
            Returns the specified member of the request header.
            </summary>
            <returns>The HTTP verb returned in the request header.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetQueryString">
            <summary>
            Returns the query string specified in the request URL.
            </summary>
            <returns>The request query string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetRemoteAddress">
            <summary>
            Provides access to the specified member of the request header.
            </summary>
            <returns>The client&apos;s IP address.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)">
            <summary>
            Adds the specified number of bytes from a byte array to the response.
            </summary>
            <param name="data">The byte array to send.</param>
            <param name="length">The number of bytes to send, starting at the first byte.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.SendKnownResponseHeader(System.String,System.String)">
            <summary>
            Adds a standard HTTP header to the response.
            </summary>
            <param name="name">The header name. For example, Accept-Range</param>
            <param name="value">The value of the header.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.IsClientConnected">
            <summary>
            Returns a value indicating whether the client connection is still active.
            </summary>
            <returns>true if the client connection is still active; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetRemoteName">
            <summary>
            When overridden in a derived class, returns the name of the client computer.
            </summary>
            <returns>The name of the client computer.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetAppPathTranslated">
            <summary>
            Returns the physical path to the currently executing server application.
            </summary>
            <returns>The physical path of the current application.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetServerVariable(System.String)">
            <summary>
            Returns a single server variable from a dictionary of server variables associated with the request.
            </summary>
            <param name="name">The name of the requested server variable.</param>
            <returns>The requested server variable.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetRequestHeaders">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.GetServerName">
            <summary>
            When overridden in a derived class, returns the name of the local server.
            </summary>
            <returns>The name of the local server.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.MapPath(System.String)">
            <summary>
            Maps a virtual path to a physical path on the server.
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.IsSecure">
            <summary>
            Returns a value indicating whether the connection uses SSL.
            </summary>
            <returns>true if the connection is an SSL connection; otherwise, false. The default is false.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.CloseConnection">
            <summary>
            Terminates the connection with the client.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)">
            <summary>
            Adds a Content-Length HTTP header to the response.
            </summary>
            <param name="contentLength">The length of the response, in bytes.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpWorkerRequest.HeadersSent">
            <summary>
            Returns a value indicating whether HTTP response headers have been sent to the client for the current request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Security.Principal.GenericIdentity">
            <summary>
            Represents a generic user.
            </summary>
        </member>
        <member name="T:OpenNETCF.Security.Principal.IIdentity">
            <summary>
            Defines the basic functionality of an identity object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Security.Principal.IIdentity.AuthenticationType">
            <summary>
            Gets the type of authentication used.
            </summary>
        </member>
        <member name="P:OpenNETCF.Security.Principal.IIdentity.IsAuthenticated">
            <summary>
            Gets a value that indicates whether the user has been authenticated.
            </summary>
        </member>
        <member name="P:OpenNETCF.Security.Principal.IIdentity.Name">
            <summary>
            Gets the name of the current user.
            </summary>
        </member>
        <member name="M:OpenNETCF.Security.Principal.GenericIdentity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GenericIdentity class representing the user with the specified name.
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:OpenNETCF.Security.Principal.GenericIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the GenericIdentity class representing the user with the specified name and authentication type.
            </summary>
            <param name="userName"></param>
            <param name="authType"></param>
        </member>
        <member name="P:OpenNETCF.Security.Principal.GenericIdentity.AuthenticationType">
            <summary>
            Gets the type of authentication used to identify the user.
            </summary>
        </member>
        <member name="P:OpenNETCF.Security.Principal.GenericIdentity.IsAuthenticated">
            <summary>
            Gets a value indicating whether the user has been authenticated.
            </summary>
        </member>
        <member name="P:OpenNETCF.Security.Principal.GenericIdentity.Name">
            <summary>
            Gets the user's name.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.ServerConfigurationHandler">
            <summary>
            Represents the WebServer section in the app.config file
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.IConfigurationSectionHandler">
            <summary>
            Defines the contract that all configuration section handlers must implement in order to participate in the resolution of configuration settings.
            Reads key-value pair configuration information for a configuration section.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Implemented by all configuration section handlers to parse the XML of the configuration section. The 
            returned object is added to the configuration collection and is accessed by 
            System.Configuration.ConfigurationSettings.GetConfig(System.String).
            </summary>
            <param name="parent">The configuration settings in a corresponding parent configuration section.</param>
            <param name="configContext">An System.Web.Configuration.HttpConfigurationContext when 
            System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode) 
            is called from the ASP.NET configuration system. Otherwise, this parameter is reserved and is null.</param>
            <param name="section">The System.Xml.XmlNode that contains the configuration information from the 
            configuration file. Provides direct access to the XML contents of the configuration section.</param>
            <returns>A configuration object.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.ServerConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates an instance of ServerConfig from the information in the app.config file
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.UI.ControlBuilder">
            <summary>
            Supports the page parser in building a control and the child controls it contains.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.ControlBuilder.#ctor">
            <summary>
            Initializes a new instance of the ControlBuilder class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
            <summary>
            Obtains the Type of the control type corresponding to a child tag. This method is called by the Padarn page framework. 
            </summary>
            <param name="tagName"></param>
            <param name="attribs"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.UI.ControlBuilder.Parser">
            <summary>
            Gets the TemplateParser responsible for parsing the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.ControlBuilder.ControlType">
            <summary>
            The Type for the control to be created.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.ControlBuilder.TagName">
            <summary>
            Gets the tag name for the control to be built.
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.AppSettingsReader">
            <summary>
            Provides a method for reading values of a particular type from the .config file.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.AppSettingsReader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.HttpPostedFile">
            <summary>
            Provides access to individual files that have been uploaded by a client.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpPostedFile.SaveAs(System.String)">
            <summary>
            Saves the contents of an uploaded file.
            </summary>
            <param name="filename">The name of the saved file. </param>
        </member>
        <member name="P:OpenNETCF.Web.HttpPostedFile.ContentLength">
            <summary>
            Gets the size of an uploaded file, in bytes
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpPostedFile.ContentType">
            <summary>
            Gets the MIME content type of a file sent by a client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpPostedFile.FileName">
            <summary>
            Gets the fully qualified name of the file on the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpPostedFile.InputStream">
            <summary>
            Gets a Stream object that points to an uploaded file to prepare for reading the contents of the file.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Hosting.HostingEnvironment">
            <summary>
            Provides application-management functions and application services to a managed application within its application domain. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(OpenNETCF.Web.Hosting.VirtualPathProvider)">
            <summary>
            Registers a new VirtualPathProvider instance with the Padarn system.
            </summary>
            <param name="virtualPathProvider"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.HostingEnvironment.MapPath(System.String)">
            <summary>
            Maps a virtual path to a physical path on the server.
            </summary>
            <param name="virtualPath">The virtual path (absolute or relative). </param>
            <returns>The physical path on the server specified by virtualPath.</returns>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath">
            <summary>
            Gets the physical path on disk to the application's directory.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.HostingEnvironment.ApplicationVersion">
            <summary>
            Gets the version of the Padarn server assembly
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpRequestValidationException">
            <summary>
            The exception that is thrown when a potentially malicious input string is received from the client as part of the request data. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpException">
            <summary>
            Describes an exception that occurred during the processing of HTTP requests.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.CreateFromLastError(System.String)">
            <summary>
            Creates a new <see cref="T:OpenNETCF.Web.HttpException"/> exception based on the error code that 
            is returned from the Win32 API GetLastError() method.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Web.HttpException"/> class using a supplied error message.
            </summary>
            <param name="message">The error message displayed to the client when the exception is thrown.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.#ctor(System.Int32,System.String)">
            <summary>
            Creates an instance of the <see cref="T:OpenNETCF.Web.HttpException"/> type
            </summary>
            <param name="httpCode"></param>
            <param name="message"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.#ctor(OpenNETCF.Web.HttpErrorCode,System.String)">
            <summary>
            Creates an instance of the <see cref="T:OpenNETCF.Web.HttpException"/> type
            </summary>
            <param name="httpCode"></param>
            <param name="message"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Web.HttpException"/> class using an error message and the InnerException property.
            </summary>
            <param name="message">The error message displayed to the client when the exception is thrown.</param>
            <param name="innerException">The <see cref="P:System.Exception.InnerException"/>, if any, that threw the current exception.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.#ctor(OpenNETCF.Web.HttpErrorCode,System.String,System.Exception)">
            <summary>
            Creates an instance of the <see cref="T:OpenNETCF.Web.HttpException"/> type
            </summary>
            <param name="httpCode"></param>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.#ctor(System.String,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:OpenNETCF.Web.HttpException"/> type
            </summary>
            <param name="message"></param>
            <param name="hr"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.#ctor(OpenNETCF.Web.HttpErrorCode,System.String,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:OpenNETCF.Web.HttpException"/> type
            </summary>
            <param name="httpCode"></param>
            <param name="message"></param>
            <param name="hr"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpException.GetHttpCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpRequestValidationException.#ctor(System.String)">
            <summary>
            Creates a new HttpRequestValidationException exception with the specified error message.
            </summary>
            <param name="message">A string that describes the error.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the HttpRequestValidationException class with a specified error message and a reference to the inner exception that is the cause of the exception.
            </summary>
            <param name="message">An error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If this parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.CachingProfile.Duration">
            <summary>
            Specifies the time that the page or user control is cached . The default is 00:00:30.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.CachingProfile.Extension">
            <summary>
            Specifies the file name extension for the files you want to cache.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.CachingProfile.Location">
            <summary>
            Specifies the valid values for controlling the location of the output-cached HTTP response for a resource. 
            </summary>
            <remarks>This will default to <b>Client</b></remarks>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.CachingConfig">
            <summary>
            Caching configuration for the server
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.CachingConfig.Profiles">
            <summary>
            The currently set caching profiles for the server
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.WebControls.WebControl">
            <summary>
            Serves as the base class that defines the methods, properties and events common to all controls in the OpenNETCF.Web.UI.WebControls namespace.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.Control">
            <summary>
            Defines the properties, methods, and events that are shared by all Padarn server controls.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.Control.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Web.UI.Control"/> class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.Control.OnInit(System.EventArgs)">
            <summary>
            Raises the Init event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Control.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Control.Render(OpenNETCF.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="E:OpenNETCF.Web.UI.Control.Load">
            <summary>
            Occurs when the server control is loaded into the <see cref="P:OpenNETCF.Web.UI.Control.Page"/> object.
            </summary>
        </member>
        <member name="E:OpenNETCF.Web.UI.Control.Init">
            <summary>
            Occurs when the server control is initialized, which is the first step in its lifecycle.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.Control.ID">
            <summary>
            Gets or sets the programmatic identifier assigned to the server control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.Control.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.Control.Page">
            <summary>
            Gets a reference to the Page instance that contains the server control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.Control.Controls">
            <summary>
            Gets a ControlCollection object that represents the child controls for a specified server control in the UI hierarchy.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.WebControl.#ctor">
            <summary>
            Initializes a new instance of the WebControl class that represents a Span HTML tag.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.WebControl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WebControl class using the specified HTML tag.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.WebControl.#ctor(OpenNETCF.Web.UI.HtmlTextWriterTag)">
            <summary>
            Initializes a new instance of the WebControl class using the specified HTML tag.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="P:OpenNETCF.Web.UI.WebControls.WebControl.TagName">
            <summary>
            Gets the name of the control tag. This property is used primarily by control developers.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.WebControls.TextBox">
            <summary>
            Displays a text box control for user input.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.TextBox.Render(System.Xml.XmlWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="E:OpenNETCF.Web.UI.WebControls.TextBox.TextChanged">
            <summary>
            Occurs when the content of the text box changes between posts to the server.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.WebControls.TextBox.Text">
            <summary>
            Gets or sets the text caption displayed in the TextBox control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.WebControls.TextBox.TextMode">
            <summary>
            Gets or sets the behavior mode (single-line, multiline, or password) of the TextBox control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.BinFolderName">
            <summary>
              Looks up a localized string similar to bin.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.CannotRedirectToNewLine">
            <summary>
              Looks up a localized string similar to Cannot redirect to new line.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.CodeBehindNotFoundDesc">
            <summary>
              Looks up a localized string similar to Although the page seems to be valid, the server was unable to find its associated code-behind assembly.
            				&lt;ul style=&quot;list-style: square;&quot;&gt;
            					&lt;li style=&quot;padding-bottom: 5px;&quot;&gt;Check that the file mentioned in the exception exists on the device.&lt;/li&gt;
            					&lt;li style=&quot;padding-bottom: 5px; line-height: 1.4;&quot;&gt;Is the name of the assembly the same as the name specified in the ASP.NET page? They must be the same.&lt;/li&gt;
            				&lt;/ul&gt;.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.CodeBehindNotFoundTitle">
            <summary>
              Looks up a localized string similar to Code-behind assembly, or one of its references, could not be found..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.ContextualErrorTemplate">
            <summary>
              Looks up a localized string similar to &lt;html style=&quot;background-color: #f0f0f0; font-family: Helvetica;  color: #000; font-size: 10.5pt; line-height: 1.4;&quot;&gt;
            &lt;head&gt;
            	&lt;title&gt;Server Error: {0}&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
            	&lt;center&gt;
            	&lt;div style=&quot;text-align: left; margin-top: 50px; margin-bottom: 0px; border: 1px solid #e3e3e3; width: 600px; background: #fff; margin-left: auto; margin-right: auto; 
            	padding-left: 10px; padding-right: 40px; padding-top: 30px; padding-bottom: 20px;&quot;&gt;		
            		&lt;div style=&quot;float: left; margin-left: 40px; width: 540px [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.Dangerous_input_detected">
            <summary>
              Looks up a localized string similar to A potentially dangerous {0} value was detected from the client ({1})..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.DiskError">
            <summary>
              Looks up a localized string similar to Disk Error.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.DiskErrorDesc">
            <summary>
              Looks up a localized string similar to A Disk/Drive Error has been occurred.  Check to ensure the Padarn Server is not out of disk space for temporary and log files..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.DiskErrorTitle">
            <summary>
              Looks up a localized string similar to A Disk/Drive Error has occurred.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.ErrorPage">
            <summary>
              Looks up a localized string similar to &lt;html style=&quot;background-color: #f0f0f0; font-family: Helvetica;  color: #000; font-size: 11pt;&quot;&gt;
            &lt;head&gt;
            	&lt;title&gt;Server Error: Unhandled exception in &apos;{0}&apos;&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
            	&lt;center&gt;
            	&lt;div style=&quot;text-align: left; margin-top: 50px; margin-bottom: 0px; border: 1px solid #e3e3e3; width: 600px; background: #fff; margin-left: auto; margin-right: auto; 
            	padding-left: 10px; padding-right: 40px; padding-top: 40px; padding-bottom: 20px;&quot;&gt;		
            		&lt;div style=&quot;float: left; margin-left: 40px; width:  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.FileNotFoundDesc">
            <summary>
              Looks up a localized string similar to The page or file is missing and cannot be served.
            				&lt;ul style=&quot;list-style: square;&quot;&gt;
            					&lt;li style=&quot;padding-bottom: 5px;&quot;&gt;Check that the file mentioned in the exception exists on the device.&lt;/li&gt;
            						&lt;li style=&quot;padding-bottom: 5px;&quot;&gt;Check that the URL for the file is correct.&lt;/li&gt;
            				&lt;/ul&gt;.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.FileNotFoundErrorPage">
            <summary>
              Looks up a localized string similar to &lt;html style=&quot;background-color: #f0f0f0; font-family: Helvetica;  color: #000; font-size: 10.5pt; line-height: 1.4;&quot;&gt;
            &lt;head&gt;
            	&lt;title&gt;Server Error: Code-behind assembly not found.&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
            	&lt;center&gt;
            	&lt;div style=&quot;text-align: left; margin-top: 50px; margin-bottom: 0px; border: 1px solid #e3e3e3; width: 600px; background: #fff; margin-left: auto; margin-right: auto; 
            	padding-left: 10px; padding-right: 40px; padding-top: 30px; padding-bottom: 20px;&quot;&gt;		
            		&lt;div style=&quot;float: left; mar [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.FileNotFoundTitle">
            <summary>
              Looks up a localized string similar to The page or file cannot be found..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HeaderAcceptRanges">
            <summary>
              Looks up a localized string similar to Accept-Ranges.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HeaderAcceptRangesBytes">
            <summary>
              Looks up a localized string similar to bytes.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HeaderContentLength">
            <summary>
              Looks up a localized string similar to Content-Length.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HeaderContentType">
            <summary>
              Looks up a localized string similar to Content-Type.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HeaderFormat">
            <summary>
              Looks up a localized string similar to {0}: {1}\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HeaderLocation">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpAccessDenied">
            <summary>
              Looks up a localized string similar to Access is denied..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpAccessForbidden">
            <summary>
              Looks up a localized string similar to Access is forbidden..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpContinue">
            <summary>
              Looks up a localized string similar to HTTP/1.1 100 Continue\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpEnumeratorDenied">
            <summary>
              Looks up a localized string similar to The file enumerator has been denied access..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpEnumeratorError">
            <summary>
              Looks up a localized string similar to An error occurred attempting to enumerate the files..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpErrorParsingHeader">
            <summary>
              Looks up a localized string similar to Error parsing request headers.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpFileHidden">
            <summary>
              Looks up a localized string similar to The file you are trying to access is hidden..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpFileNotFound">
            <summary>
              Looks up a localized string similar to The file you are trying to access cannot be found..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpOK">
            <summary>
              Looks up a localized string similar to HTTP/1.1 200 OK\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusBadRequest">
            <summary>
              Looks up a localized string similar to HTTP/1.1 400 Bad Request\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusConflict">
            <summary>
              Looks up a localized string similar to HTTP/1.1 409 Conflict\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusExpectationFailed">
            <summary>
              Looks up a localized string similar to HTTP/1.1 417 ExpectationFailed\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusFileNotFound">
            <summary>
              Looks up a localized string similar to HTTP/1.1 404 Not Found\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusForbidden">
            <summary>
              Looks up a localized string similar to HTTP/1.1 403 Forbidden\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusGeneric">
            <summary>
              Looks up a localized string similar to HTTP/1.1 {0} Http Status\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusGone">
            <summary>
              Looks up a localized string similar to HTTP/1.1 410 Gone\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusInternalServerError">
            <summary>
              Looks up a localized string similar to HTTP/1.1 500 Internal Server Error\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusLengthRequired">
            <summary>
              Looks up a localized string similar to HTTP/1.1 411 Length Required\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusNotAcceptable">
            <summary>
              Looks up a localized string similar to HTTP/1.1 406 Not Acceptable\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusNotAllowed">
            <summary>
              Looks up a localized string similar to HTTP/1.1 405 Method Not Allowed\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusPaymentRequired">
            <summary>
              Looks up a localized string similar to HTTP/1.1 402 Payment Required\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusPreconditionFailed">
            <summary>
              Looks up a localized string similar to HTTP/1.1 412 Precondition Failed\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusProxyAuthRequired">
            <summary>
              Looks up a localized string similar to HTTP/1.1 407 Proxy Authentication Required\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusRequestedRangeNotSatisfiable">
            <summary>
              Looks up a localized string similar to HTTP/1.1 416 Requested Range Not Satisfiable\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusRequestEntityTooLarge">
            <summary>
              Looks up a localized string similar to HTTP/1.1 413 Request Entity Too Large\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusRequestTimeout">
            <summary>
              Looks up a localized string similar to HTTP/1.1 408 RequestTimeout\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusRequestURITooLong">
            <summary>
              Looks up a localized string similar to HTTP/1.1 414 Request URI Too Long\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusUnauthorized">
            <summary>
              Looks up a localized string similar to HTTP/1.1 401 Unauthorized\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.HttpStatusUnsupportedMediaType">
            <summary>
              Looks up a localized string similar to HTTP/1.1 415 Unsupported Media Type\r\n.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.Invalid_string_from_browser_caps">
            <summary>
              Looks up a localized string similar to The HttpBrowserCapabilities string &apos;{1}&apos; evaluated to &apos;{2}&apos;.  {0}  Check the browserCaps section of machine.config or web.config to correct the error..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.Invalid_urlencoded_form_data">
            <summary>
              Looks up a localized string similar to The URL-encoded form data is not valid..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.InvalidHeaderEncoding">
            <summary>
              Looks up a localized string similar to Invalid header encoding {0}..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.machine_config">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;configuration&gt;
                &lt;configSections&gt;
                    &lt;section name=&quot;appSettings&quot; type=&quot;OpenNETCF.Configuration.NameValueFileSectionHandler, OpenNETCF.Configuration&quot; allowLocation=&quot;false&quot; /&gt;
                    &lt;section name=&quot;opennetcf.diagnostics&quot; type=&quot;OpenNETCF.Diagnostics.DiagnosticsConfigurationHandler, OpenNETCF&quot;/&gt;
                &lt;/configSections&gt;
            &lt;/configuration&gt;.
             </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.Max_request_length_exceeded">
            <summary>
              Looks up a localized string similar to Maximum request length exceeded.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.MaxRequestLengthErrorDesc">
            <summary>
              Looks up a localized string similar to The file being uploaded exceeds the maximum length allowed by the server configuration..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.MaxRequestLengthErrorTitle">
            <summary>
              Looks up a localized string similar to Upload exceeds server setting.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.NoHttpHandler">
            <summary>
              Looks up a localized string similar to No HTTP handler for this file type.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.OutOfDiskSpaceError">
            <summary>
              Looks up a localized string similar to Out of disk space.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.OutOfMemoryErrorDesc">
            <summary>
              Looks up a localized string similar to The HTTP request has resulted in an out of memory exception. Please ensure the requestLengthDiskThreshold configuration setting does not exceed the amount of available memory..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.OutOfMemoryErrorTitle">
            <summary>
              Looks up a localized string similar to The server has no available memory.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.OutOfMemoryException">
            <summary>
              Looks up a localized string similar to Out of memory.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.PageLoadEventName">
            <summary>
              Looks up a localized string similar to Page_Load.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.TypeLoadDesc">
            <summary>
              Looks up a localized string similar to The code-behind class for this page is either missing from the assembly or is invalid.
            				&lt;ul style=&quot;list-style: square;&quot;&gt;
            					&lt;li style=&quot;padding-bottom: 5px;&quot;&gt;Check that the code-behind class derives from &lt;b&gt;OpenNETCF.Web.UI.Page&lt;/b&gt;.&lt;/li&gt;
            					&lt;li style=&quot;padding-bottom: 5px;&quot;&gt;Is the name of the code-behind class the same as the name specified in the ASP.NET page? They must be the same.&lt;/li&gt;
            					
            					&lt;li style=&quot;padding-bottom: 5px;&quot;&gt;Check the scope of the code-behind class and make sure it is [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.TypeLoadTitle">
            <summary>
              Looks up a localized string similar to Missing or invalid page class.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.UnauthorizedDesc">
            <summary>
              Looks up a localized string similar to You do not have permission to view this directory or page using the credentials you supplied..
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.UnauthorizedTitle">
            <summary>
              Looks up a localized string similar to Logon failed due to server configuration.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.UnhandledExceptionDesc">
            <summary>
              Looks up a localized string similar to There was an unhandled exception in &apos;{0}&apos;. Please review the exception and stack trace below. .
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.UnsupportedMethod">
            <summary>
              Looks up a localized string similar to Unsupported method in query: {0}.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.UnuthorizedMessage">
            <summary>
              Looks up a localized string similar to You are not authorized to view this page.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Resources.VirtualDir_AttributeNotFound">
            <summary>
              Looks up a localized string similar to {0} attribute not found in the VirtualDirectory node in {1}..
            </summary>
        </member>
        <member name="T:OpenNETCF.Reflection.Assembly2">
            <summary>
            Contains helper functions for the <see cref="T:System.Reflection.Assembly"/> class.
            </summary>
            <seealso cref="T:System.Reflection.Assembly"/>
        </member>
        <member name="M:OpenNETCF.Reflection.Assembly2.GetEntryAssembly">
            <summary>
            Gets the process executable.
            </summary>
            <returns>The <see cref="T:System.Reflection.Assembly"/> that is the process executable.</returns>
        </member>
        <member name="T:OpenNETCF.Web.IHttpModule">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.IHttpModule.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.IHttpModule.Init(OpenNETCF.Web.HttpContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpCachePolicy">
            <summary>
            Contains methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCachePolicy.SetNoStore">
            <summary>
            Sets the <b>Cache-Control: no-store</b> directive.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCachePolicy.SetCacheability(OpenNETCF.Web.HttpCacheability)">
            <summary>
            Sets the Cache-Control HTTP header. The Cache-Control HTTP header controls how documents are to be cached on the network.
            </summary>
            <param name="cacheability">The HttpCacheability enumeration value to set the header to.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCachePolicy.SetCacheability(OpenNETCF.Web.HttpCacheability,System.String)">
            <summary>
            Sets the Cache-Control HTTP header. The Cache-Control HTTP header controls how documents are to be cached on the network.
            </summary>
            <param name="cacheability">The HttpCacheability enumeration value to set the header to.</param>
            <param name="field">The cache control extension to add to the header.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCachePolicy.SetNoTransforms">
            <summary>
            Sets the <b>Cache-Control: no-transform</b> HTTP header. 
            </summary>
            <remarks>
            The Cache-Control: no-transform HTTP header instructs network caching applications not to modify the document. 
            The Cache-Control: no-transform HTTP header prevents downstream proxy servers from changing any header values specified by the Content-Encoding, Content-Range, or Content-Type headers (this includes the entity body). 
            For example, it prevents proxies from converting GIF images to PNG. 
            As with other restrictions on caching, once SetNoTransforms is called, the Cache-Control: no-transform HTTP header cannot be disabled through the HttpCachePolicy interface. 
            </remarks>
        </member>
        <member name="M:OpenNETCF.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)">
            <summary>
            Sets the <b>Cache-Control: max-age HTTP header</b> based on the specified time span.
            </summary>
            <param name="delta">The time span used to set the <b>Cache-Control: max-age</b> header.</param>
        </member>
        <member name="T:OpenNETCF.Web.Hosting.VirtualFile">
            <summary>
            Represents a file object in a virtual file or resource space.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Hosting.VirtualFileBase">
            <summary>
            Provides the core implementation for the VirtualFile and VirtualDirectory objects. An abstract class, it cannot be instantiated. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualFileBase.#ctor">
            <summary>
            Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualFileBase.IsDirectory">
            <summary>
            When overridden in a derived class, gets a value indicating whether the VirtualFileBase instance represents a virtual file or a virtual directory.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualFileBase.Name">
            <summary>
            Gets the display name of the virtual resource. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualFileBase.VirtualPath">
            <summary>
            Gets the virtual file path. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VirtualFile class. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualFile.Open">
            <summary>
            When overridden in a derived class, returns a read-only stream to the virtual resource. 
            </summary>
            <returns>A read-only stream to the virtual file.</returns>
            <remarks>The Open method returns a stream containing the data treated as a file by the VirtualPathProvider class. The stream is read-only, and can be seekable.</remarks>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualFile.IsDirectory">
            <summary>
            Gets a value that indicates that this is a virtual resource that should be treated as a file.
            </summary>
            <value>Always <b>false</b>.</value>
        </member>
        <member name="T:OpenNETCF.Web.UI.HtmlTextWriterTag">
            <summary>
            Specifies the HTML tags that can be passed to an HtmlTextWriter object output stream.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Unknown">
            <summary>
            The string passed as an HTML tag is not recognized.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.A">
            <summary>
            The HTML a element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Address">
            <summary>
            The HTML address element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Area">
            <summary>
            The HTML area element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Blockquote">
            <summary>
            The HTML blockquote element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Body">
            <summary>
             The HTML body element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Br">
            <summary>
            The HTML br element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Button">
            <summary>
            The HTML button element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Caption">
            <summary>
            The HTML caption element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Code">
            <summary>
            The HTML code element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Col">
            <summary>
            The HTML col element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Colgroup">
            <summary>
            The HTML colgroup element.  
            </summary>  
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Div">
            <summary>
            The HTML div element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Fieldset">
            <summary>
            The HTML fieldset element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Form">
            <summary>
            The HTML form element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.H1">
            <summary>
            The HTML H1 element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.H2">
            <summary>
            The HTML H2 element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.H3">
            <summary>
            The HTML H3 element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.H4">
            <summary>
            The HTML H4 element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.H5">
            <summary>
            The HTML H5 element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.H6">
            <summary>
            The HTML H6 element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Head">
            <summary>
            The HTML head element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Html">
            <summary>
            The HTML html element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Hr">
            <summary>
            The HTML hr element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.I">
            <summary>
            The HTML i element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Iframe">
            <summary>
            The HTML iframe element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Img">
            <summary>
            The HTML img element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Input">
            <summary>
            The HTML input element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Label">
            <summary>
            The HTML label element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Legend">
            <summary>
            The HTML legend element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Li">
            <summary>
            The HTML li element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Link">
            <summary>
            The HTML link element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Meta">
            <summary>
            The HTML meta element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Object">
            <summary>
            The HTML object element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Ol">
            <summary>
            The HTML ol element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Option">
            <summary>
            The HTML option element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.P">
            <summary>
            The HTML p element.   
            </summary>        
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Param">
            <summary>
            The HTML param element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Pre">
            <summary>
            The HTML pre element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Script">
            <summary>
            The HTML script element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Select">
            <summary>
            The HTML select element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Span">
            <summary>
            The HTML span element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Strike">
            <summary>
            The HTML strike element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Strong">
            <summary>
            The HTML strong element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Style">
            <summary>
            The HTML style element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Table">
            <summary>
            The HTML table element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Tbody">
            <summary>
            The HTML tbody element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Td">
            <summary>
            The HTML td element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Textarea">
            <summary>
            The HTML textarea element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Th">
            <summary>
            The HTML th element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Thead">
            <summary>
            The HTML thead element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Title">
            <summary>
            The HTML title element.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Tr">
            <summary>
            The HTML tr element.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterTag.Ul">
            <summary>
            The HTML ul element.  
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpCookie">
            <summary>
            Provides a type-safe way to create and manipulate individual HTTP cookies.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookie.#ctor(System.String)">
            <summary>
            Creates and names a new cookie.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookie.#ctor(System.String,System.String)">
            <summary>
            Creates, names, and assigns a value to a new cookie.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.Domain">
            <summary>
            Gets or sets the domain to associate the cookie with.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.Expires">
            <summary>
            Gets or sets the expiration date and time for the cookie.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.HasKeys">
            <summary>
            Gets a value indicating whether a cookie has subkeys.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.HttpOnly">
            <summary>
            Gets or sets a value that specifies whether a cookie is accessible by client-side script.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.Name">
            <summary>
            Gets or sets the name of a cookie.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.Path">
            <summary>
            Gets or sets the virtual path to transmit with the current cookie.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.Secure">
            <summary>
            Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.Value">
            <summary>
            Gets or sets an individual cookie value.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookie.Values">
            <summary>
            Gets a collection of key/value pairs that are contained within a single cookie object.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Hosting.VirtualDirectory">
            <summary>
            Represents a directory object in a virtual file or resource space.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualDirectory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VirtualDirectory class. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualDirectory.IsDirectory">
            <summary>
            Gets a value that indicates that this is a virtual resource that should be treated as a directory.
            </summary>
            <value>Always <b>true</b>.</value>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualDirectory.Files">
            <summary>
            Gets a list of all files contained in this directory.
            </summary>
            <value>An object implementing the IEnumerable interface containing VirtualFile objects.</value>
            <remarks>The Files property contains VirtualFile objects that represent the files contained in this virtual directory. 
            To return the VirtualDirectory objects, use the Directories property. 
            To return both VirtualFile and VirtualDirectory objects, use the Children property.</remarks>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualDirectory.Directories">
            <summary>
            Gets a list of all the subdirectories contained in this directory. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.VirtualDirectory.Children">
            <summary>
            Gets a list of the files and subdirectories contained in this virtual directory.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.TemplateParser">
            <summary>
            Serves as the abstract base class for Padarn file parsers. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Security.FormsAuthentication">
            <summary>
            Manages forms-authentication services for Web applications. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)">
            <summary>
            Returns the redirect URL for the original request that caused the redirect to the login page.
            </summary>
            <param name="userName">The name of the authenticated user.</param>
            <param name="createPersistentCookie">This parameter is ignored.</param>
            <returns>A string that contains the redirect URL.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)">
            <summary>
            Redirects an authenticated user back to the originally requested URL or the default URL.
            </summary>
            <param name="userName">The authenticated user name.</param>
            <param name="createPersistentCookie"><b>true</b> to create a durable cookie (one that is saved across browser sessions); otherwise, <b>false</b>.</param>
        </member>
        <member name="M:OpenNETCF.Web.Security.FormsAuthentication.RedirectToLoginPage">
            <summary>
            Redirects the browser to the login URL.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Security.FormsAuthentication.SignOut">
            <summary>
            Removes the forms-authentication ticket from the browser.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.Timeout">
            <summary>
            Gets the amount of time before an authentication ticket expires.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.SlidingExpiration">
            <summary>
            Gets a value indicating whether sliding expiration is enabled.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.RequireSSL">
            <summary>
            Gets a value indicating whether the forms-authentication cookie requires SSL in order to be returned to the server.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.FormsCookiePath">
            <summary>
            Gets the path for the forms-authentication cookie.
            </summary>
            <value>The path of the cookie where the forms-authentication ticket information is stored. The default is "/".</value>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.DefaultUrl">
            <summary>
            Gets the URL that the FormsAuthentication class will redirect to if no redirect URL is specified.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.CookieDomain">
            <summary>
            Gets the value of the domain of the forms-authentication cookie.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.CookieMode">
            <summary>
            Gets a value that indicates whether the application is configured for cookieless forms authentication.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.EnableCrossAppRedirects">
            <summary>
            Gets a value indicating whether authenticated users can be redirected to URLs in other Web applications.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.CookiesSupported">
            <summary>
            Gets a value that indicates whether the application is configured to support cookieless forms authentication.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.IsEnabled">
            <summary>
            Gets the Padarn server's enabled state for Forms Authentication.
            </summary>
            <remarks>
            To Enable Forms Authentication, set the authentication type in the app.config file
            </remarks>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.LoginUrl">
            <summary>
            Gets the URL for the login page that the FormsAuthentication class will redirect to.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Security.FormsAuthentication.FormsCookieName">
            <summary>
            Gets the name of the cookie used to store the forms-authentication ticket.
            </summary>
            <value>The name of the cookie used to store the forms-authentication ticket. The default is ".ASPXAUTH".</value>
        </member>
        <member name="M:OpenNETCF.Web.Security.Authentication.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="authenticationMethod"></param>
        </member>
        <member name="P:OpenNETCF.Web.Security.Authentication.AuthenticationMethod">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.ConfigXmlDocument">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.Load(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.ReadConfigNode(System.String,System.Xml.XmlTextReader)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="sourceReader"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="sourceReader"></param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="prefix"></param>
            <param name="localName"></param>
            <param name="namespaceUri"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="prefix"></param>
            <param name="localName"></param>
            <param name="namespaceUri"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.CreateComment(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Configuration.ConfigXmlDocument.Filename">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenNETCF.Configuration.ConfigXmlDocument.LineNumber">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpRequestBase">
            <summary>
            Serves as the base class for classes that enable ASP.NET to read the HTTP values sent by a client during a Web request.
            </summary>
            <remarks>
            The HttpRequestBase class is an abstract class that contains the same members as the HttpRequest class. The HttpRequestBase class enables you to create derived classes that are like the HttpRequest class, but that you can customize and that work outside the ASP.NET pipeline. When you perform unit testing, you typically use a derived class to implement members that have customized behavior that fulfills the scenario that you are testing.
            The HttpRequestWrapper class derives from the HttpRequestBase class. The HttpRequestWrapper class serves as a wrapper for the HttpRequest class. At run time, you typically use an instance of the HttpRequestWrapper class to invoke members of the HttpRequest object.
            </remarks>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.Headers">
            <summary>
            When overridden in a derived class, gets the collection of HTTP headers that were sent by the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.QueryString">
            <summary>
            When overridden in a derived class, gets the collection of HTTP query-string variables.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.HttpMethod">
            <summary>
            When overridden in a derived class, gets the HTTP data-transfer method (such as GET, POST, or HEAD) that was used by the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.Form">
            <summary>
            When overridden in a derived class, gets the collection of form variables that were sent by the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.Path">
            <summary>
            When overridden in a derived class, gets the virtual path of the current request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.ApplicationPath">
            <summary>
            When overridden in a derived class, gets the virtual root path of the Padarn application on the server
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.ServerVariables">
            <summary>
            When overridden in a derived class, gets a collection of Web server variables.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequestBase.RawUrl">
            <summary>
            When overridden in a derived class, gets the complete URL of the current request.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpContext">
            <summary>
            Encapsulates all HTTP-specific information about an individual HTTP request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpContext.Current">
            <summary>
            Gets the <see cref="T:OpenNETCF.Web.HttpContext"/> object for the current HTTP request.
            </summary>
            <returns>The <see cref="T:OpenNETCF.Web.HttpContext"/> for the current request.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpContext.Request">
            <summary>
            Gets the <see cref="T:OpenNETCF.Web.HttpRequest"/> object for the current HTTP request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpContext.Response">
            <summary>
            Gets the <see cref="T:OpenNETCF.Web.HttpResponse"/> object for the current HTTP response.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpContext.Session">
            <summary>
            Gets the HttpSessionState object for the current HTTP request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpContext.User">
            <summary>
            Gets or sets security information for the current HTTP request.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.WebControls.Button">
            <summary>
            Displays a push button control on the Web page.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.IPostBackEventHandler">
            <summary>
            Defines the method Padarn server controls must implement to handle postback events.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.Button.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event of the Button control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)">
            <summary>
            Raises events for the Button control when it posts back to the server.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="E:OpenNETCF.Web.UI.WebControls.Button.Click">
            <summary>
            Occurs when the Button control is clicked.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.WebControls.Button.Text">
            <summary>
            Gets or sets the text caption displayed in the Button control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.TemplateControl">
            <summary>
            Provides the <see cref="T:OpenNETCF.Web.UI.Page"/> class and the <see cref="T:OpenNETCF.Web.UI.UserControl"/> class with a base set of functionality.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Server.WebServer">
            <summary>
            The Web Server.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Server.WebServer.#ctor(OpenNETCF.Web.Configuration.ServerConfig)">
            <summary>
            Creates an instance of the WebServer type.
            </summary>
            <param name="config">The configuration to use in place of that provided in the app.config file</param>
        </member>
        <member name="M:OpenNETCF.Web.Server.WebServer.#ctor">
            <summary>
            Creates an instance of the WebServer type.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Server.WebServer.Start">
            <summary>
            Listens for incoming requests on a separate thread. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Server.WebServer.Stop">
            <summary>
            Stops listening for incoming requests.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Server.WebServer.PhysicalPath">
            <summary>
            Returns the physical path of the Web Application folder.
            </summary>
            <remarks>Obsolete as of version 1.1.70.  Throws an error as of version 1.1.90</remarks>
        </member>
        <member name="P:OpenNETCF.Web.Server.WebServer.Configuration">
            <summary>
            Gets the current server configuration information
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Server.WebServer.Running">
            <summary>
            Returns <b>true</b> if the server is currently running, otherwise <b>false</b>.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Server.WebServer.IsLicensed">
            <summary>
            Returns <b>true</b> if this binary is licensed, otherwise returns <b>false</b>.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Server.HttpRequestListener.#ctor(System.Net.IPAddress,System.Int32,System.Int32,OpenNETCF.Web.Logging.ILogProvider)">
            <summary>
            Create an instance of the listener on the specified port.
            </summary>
            <param name="port">The port to listen on for incoming requests.</param>
            <param name="maxConnections">The maximum number of clients that can concurrently connect to listener.</param>
            <param name="localIP"></param>
        </member>
        <member name="M:OpenNETCF.Web.Server.HttpRequestListener.StartListening">
            <summary>
            Listen for incoming HTTP requests
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Routing.RouteValueDictionary">
            <summary>
            Represents a case-insensitive collection of key/value pairs that you use in various places in the routing framework, such as when you define the default values for a route or when you generate a URL that is based on a route.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteValueDictionary.#ctor">
            <summary>
            Initializes a new instance of the RouteValueDictionary class that is empty. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteValueDictionary.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the RouteValueDictionary class and adds values that are based on properties from the specified object. 
            </summary>
            <param name="values"></param>
        </member>
        <member name="T:OpenNETCF.Web.Routing.RouteData">
            <summary>
            Encapsulates information about a route.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteData.#ctor">
            <summary>
            Initializes a new instance of the RouteData class. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteData.GetRequiredString(System.String)">
            <summary>
            Retrieves the value with the specified identifier.
            </summary>
            <param name="valueName"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.Routing.RouteData.Values">
            <summary>
            Gets a collection of URL parameter values and default values for the route.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Routing.RouteData.DataTokens">
            <summary>
            Gets a collection of custom values that are passed to the route handler but are not used when ASP.NET routing determines whether the route matches a request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Routing.RouteData.Route">
            <summary>
            Gets or sets the object that represents a route.
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.IgnoreSectionHandler">
            <summary>
            Provides a section handler definition for configuration sections read and handled by systems other than OpenNETCF.Configuration. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.HttpBrowserCapabilities">
            <summary>
            Enables the server to gather information on the capabilities of the browser that is running on the client.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpCapabilitiesBase">
            <summary>
             Provides access to detailed information about the capabilities of the client's browser.
             </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCapabilitiesBase.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
             Creates a new instance of the HttpCapabilitiesBase class.
             </summary>
             <param name="headers"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCapabilitiesBase.AddBrowser(System.String)">
            <summary>
             Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.
             </summary>
             <param name="browserName">The name of the browser to add.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCapabilitiesBase.GetClrVersions">
            <summary>
             Gets the version of the .NET Framework that is installed on the client.
             </summary>
            <returns>The common language runtime Version.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpCapabilitiesBase.IsBrowser(System.String)">
            <summary>
             Gets a value indicating whether the client browser is the same as the specified browser.
             </summary>
             <param name="browserName">The specified browser.</param>
            <returns>true if the client browser is the same as the specified browser; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Item(System.String)">
            <summary>
             Gets the value of the specified browser capability. In C#, this property is the indexer for the class.
             </summary>
             <param name="key">The name of the browser capability to retrieve.</param>
            <returns>The browser capability with the specified key name.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Capabilities">
            <summary>
             Used internally to get the defined capabilities of the browser.
             </summary>
            <returns>The defined capabilities of the browser</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.ActiveXControls">
            <summary>Gets a value indicating whether the browser supports ActiveX controls.</summary>
            <returns>true if the browser supports ActiveX controls; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.AOL">
            <summary>Gets a value indicating whether the client is an America Online (AOL) browser.</summary>
            <returns>true if the browser is an AOL browser; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.BackgroundSounds">
            <summary>Gets a value indicating whether the browser supports playing background sounds using the &lt;bgsounds&gt; HTML element.</summary>
            <returns>true if the browser supports playing background sounds; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Beta">
            <summary>Gets a value indicating whether the browser is a beta version.</summary>
            <returns>true if the browser is a beta version; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Browser">
            <summary>Gets the browser string (if any) that was sent by the browser in the User-Agent request header.</summary>
            <returns>The contents of the User-Agent request header sent by the browser.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Browsers">
            <summary>Gets an <see cref="T:System.Collections.ArrayList"></see> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities"></see> dictionary.</summary>
            <returns>An <see cref="T:System.Collections.ArrayList"></see> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities"></see> dictionary.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanCombineFormsInDeck">
            <summary>Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</summary>
            <returns>true if the browser supports decks that contain multiple forms; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanInitiateVoiceCall">
            <summary>Gets a value indicating whether the browser device is capable of initiating a voice call.</summary>
            <returns>true if the browser device is capable of initiating a voice call; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement">
            <summary>Gets a value indicating whether the browser supports page content following WML &lt;select&gt; or &lt;input&gt; elements.</summary>
            <returns>true if the browser supports page content following HTML &lt;select&gt; or &lt;input&gt; elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanRenderEmptySelects">
            <summary>Gets a value indicating whether the browser supports empty HTML &lt;select&gt; elements.</summary>
            <returns>true if the browser supports empty HTML &lt;select&gt; elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether">
            <summary>Gets a value indicating whether the browser supports WML INPUT and SELECT elements together on the same card.</summary>
            <returns>true if the browser supports WML &lt;input&gt; and &lt;select&gt; elements together; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanRenderMixedSelects">
            <summary>Gets a value indicating whether the browser supports WML &lt;option&gt; elements that specify both onpick and value attributes.</summary>
            <returns>true if the browser supports WML &lt;option&gt; elements that specify both onpick and value attributes; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether">
            <summary>Gets a value indicating whether the browser supports WML &lt;onevent&gt; and &lt;prev&gt; elements that coexist within the same WML card.</summary>
            <returns>true if the browser supports WML &lt;onevent&gt; and &lt;prev&gt; elements that coexist within the same WML card; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanRenderPostBackCards">
            <summary>Gets a value indicating whether the browser supports WML cards for postback.</summary>
            <returns>true if the browser supports WML cards for postback; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList">
            <summary>Gets a value indicating whether the browser supports WML &lt;setvar&gt; elements with a value attribute of 0.</summary>
            <returns>true if the browser supports WML &lt;setvar&gt; elements with a value attribute of 0; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CanSendMail">
            <summary>Gets a value indicating whether the browser supports sending e-mail by using the HTML &lt;mailto&gt; element for displaying electronic addresses.</summary>
            <returns>true if the browser supports sending e-mail by using the HTML &lt;mailto&gt; element for displaying electronic addresses; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.CDF">
            <summary>Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</summary>
            <returns>true if the browser supports CDF; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.ClrVersion">
            <summary>Gets the version of the .NET Framework that is installed on the client.</summary>
            <returns>The common language runtime <see cref="T:System.Version"></see>.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Cookies">
            <summary>Gets a value indicating whether the browser supports cookies.</summary>
            <returns>true if the browser supports cookies; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Crawler">
            <summary>Gets a value indicating whether the browser is a search engine Web crawler.</summary>
            <returns>true if the browser is a search engine; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.DefaultSubmitButtonLimit">
            <summary>Returns the maximum number of Submit buttons that are allowed for a form.</summary>
            <returns>The maximum number of Submit buttons that are allowed for a form.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.EcmaScriptVersion">
            <summary>Gets the version number of ECMAScript that the browser supports.</summary>
            <returns>The version number of ECMAScript that the browser supports.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Frames">
            <summary>Gets a value indicating whether the browser supports HTML frames.</summary>
            <returns>true if the browser supports frames; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.GatewayMajorVersion">
            <summary>Gets the major version number of the wireless gateway used to access the server, if known. </summary>
            <returns>The major version number of the wireless gateway used to access the server, if known. The default is 0.</returns>
            <exception cref="T:System.Web.HttpUnhandledException">The major version number of the wireless gateway cannot be parsed.</exception>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.GatewayMinorVersion">
            <summary>Gets the minor version number of the wireless gateway used to access the server, if known. </summary>
            <returns>The minor version number of the wireless gateway used to access the server, if known. The default is 0.</returns>
            <exception cref="T:System.Web.HttpUnhandledException">The minor version number of the wireless gateway cannot be parsed.</exception>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.GatewayVersion">
            <summary>Gets the version of the wireless gateway used to access the server, if known.</summary>
            <returns>The version number of the wireless gateway used to access the server, if known. The default is None.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.HasBackButton">
            <summary>Gets a value indicating whether the browser has a dedicated Back button.</summary>
            <returns>true if the browser has a dedicated Back button; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars">
            <summary>Gets a value indicating whether the scrollbar of an HTML &lt;select multiple&gt; element with an align attribute value of right is obscured upon rendering.</summary>
            <returns>true if the scrollbar of an HTML &lt;select multiple&gt; element with an align attribute value of right is obscured upon rendering; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.HtmlTextWriter">
            <summary>Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter"></see> to use.</summary>
            <returns>The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter"></see> to use.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Id">
            <summary>Gets the internal identifier of the browser as specified in the browser definition file.</summary>
            <returns>Internal identifier of the browser as specified in the browser definition file.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.InputType">
            <summary>Returns the type of input supported by browser.</summary>
            <returns>The type of input supported by browser. The default is telephoneKeypad.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.IsColor">
            <summary>Gets a value indicating whether the browser has a color display.</summary>
            <returns>true if the browser has a color display; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.IsMobileDevice">
            <summary>Gets a value indicating whether the browser is a recognized mobile device.</summary>
            <returns>true if the browser is a recognized mobile device; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.JavaApplets">
            <summary>Gets a value indicating whether the browser supports Java.</summary>
            <returns>true if the browser supports Java; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.JavaScript">
            <summary>Gets a value indicating whether the browser supports JavaScript.</summary>
            <returns>true if the browser supports JavaScript; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.JScriptVersion">
            <summary>Gets the Jscript version that the browser supports.</summary>
            <returns>The <see cref="T:System.Version"></see> of Jscript that the browser supports.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MajorVersion">
            <summary>Gets the major (integer) version number of the browser.</summary>
            <returns>The major version number of the browser.</returns>
            <exception cref="T:System.Web.HttpUnhandledException">The header value is not valid.</exception>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MaximumHrefLength">
            <summary>Gets the maximum length in characters for the href attribute of an HTML &lt;a&gt; (anchor) element.</summary>
            <returns>The maximum length in characters for the href attribute of an HTML &lt;a&gt; (anchor) element.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MaximumRenderedPageSize">
            <summary>Gets the maximum length of the page, in bytes, which the browser can display. </summary>
            <returns>The maximum length of the page, in bytes, which the browser can display. The default is 2000.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MaximumSoftkeyLabelLength">
            <summary>Returns the maximum length of the text that a soft-key label can display.</summary>
            <returns>The maximum length of the text that a soft-key label can display. The default is 5.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MinorVersion">
            <summary>Gets the minor (that is, decimal) version number of the browser.</summary>
            <returns>The minor version number of the browser.</returns>
            <exception cref="T:System.Web.HttpUnhandledException">The header value is not valid.</exception>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MinorVersionString">
            <summary>Gets the minor (decimal) version number of the browser as a string.</summary>
            <returns>The minor version number of the browser.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MobileDeviceManufacturer">
            <summary>Returns the name of the manufacturer of a mobile device, if known.</summary>
            <returns>The name of the manufacturer of a mobile device, if known. The default is Unknown.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MobileDeviceModel">
            <summary>Gets the model name of a mobile device, if known.</summary>
            <returns>The model name of a mobile device, if known. The default is Unknown.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.MSDomVersion">
            <summary>Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</summary>
            <returns>The number of the MSHTML DOM version that the browser supports.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.NumberOfSoftkeys">
            <summary>Returns the number of soft keys on a mobile device.</summary>
            <returns>The number of soft keys supported on a mobile device. The default is 0.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Platform">
            <summary>Gets the name of the platform that the client uses, if it is known.</summary>
            <returns>The operating system that the client uses, if it is known, otherwise the value is set to Unknown.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.PreferredImageMime">
            <summary>Returns the MIME type of the type of image content typically preferred by the browser.</summary>
            <returns>The MIME type of the type of image content typically preferred by the browser. The default is image/gif.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.PreferredRenderingMime">
            <summary>Returns the MIME type of the type of content typically preferred by the browser.</summary>
            <returns>The MIME type of the type of content typically preferred by the browser. The default is text/html.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.PreferredRenderingType">
            <summary>Gets the general name for the type of content that the browser prefers.</summary>
            <returns>html32 or chtml10. The default is html32.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.PreferredRequestEncoding">
            <summary>Gets the request encoding preferred by the browser.</summary>
            <returns>The request encoding preferred by the browser.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.PreferredResponseEncoding">
            <summary>Gets the response encoding preferred by the browser.</summary>
            <returns>The response encoding preferred by the browser.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput">
            <summary>Gets a value indicating whether the browser renders a line break before &lt;select&gt; or &lt;input&gt; elements.</summary>
            <returns>true if the browser renders a line break before &lt;select&gt; or &lt;input&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists">
            <summary>Gets a value indicating whether the browser renders a line break after list-item elements.</summary>
            <returns>true if the browser renders a line break after list-item elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor">
            <summary>Gets a value indicating whether the browser renders a line break after a stand-alone HTML &lt;a&gt; (anchor) element.</summary>
            <returns>true if the browser renders a line break after a stand-alone HTML &lt;a&gt; (anchor) element; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RendersBreaksAfterWmlInput">
            <summary>Gets a value indicating whether the browser renders a line break after an HTML &lt;input&gt; element.</summary>
            <returns>true if the browser renders a line break after an HTML &lt;input&gt; element; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RendersWmlDoAcceptsInline">
            <summary>Gets a value indicating whether the mobile-device browser renders a WML do-based form accept construct as an inline button rather than as a soft key.</summary>
            <returns>true if the mobile-device browser renders a WML do-based form-accept construct as an inline button; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards">
            <summary>Gets a value indicating whether the browser renders WML &lt;select&gt; elements as menu cards, rather than as a combo box.</summary>
            <returns>true if the browser renders WML &lt;select&gt; elements as menu cards; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiredMetaTagNameValue">
            <summary>Used internally to produce a meta-tag required by some browsers.</summary>
            <returns>A meta-tag required by some browsers.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresAttributeColonSubstitution">
            <summary>Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</summary>
            <returns>true if the browser requires colons in element attribute values to be substituted with a different character; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresContentTypeMetaTag">
            <summary>Gets a value indicating whether the browser requires an HTML &lt;meta&gt; element for which the content-type attribute is specified.</summary>
            <returns>true if the browser requires an HTML &lt;meta&gt; element for which the content-type attribute is specified; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresControlStateInSession">
            <summary>Gets a value indicating whether the browser requires control state to be maintained in sessions.</summary>
            <returns>true if the browser requires control state to be maintained in sessions; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresDBCSCharacter">
            <summary>Gets a value indicating whether the browser requires a double-byte character set.</summary>
            <returns>true if the browser requires a double-byte character set; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting">
            <summary>Gets a value indicating whether the browser requires nonstandard error messages.</summary>
            <returns>true if the browser requires nonstandard error messages; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresLeadingPageBreak">
            <summary>Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML &lt;br&gt; element.</summary>
            <returns>true if the browser requires the first element in the body of a Web page to be an HTML BR element; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresNoBreakInFormatting">
            <summary>Gets a value indicating whether the browser does not support HTML &lt;br&gt; elements to format line breaks.</summary>
            <returns>true if the browser does not support HTML &lt;br&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresOutputOptimization">
            <summary>Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</summary>
            <returns>true if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText">
            <summary>Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</summary>
            <returns>true if the browser supports phone dialing based on plain text only; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding">
            <summary>Gets a value indicating whether the browser requires VIEWSTATE values to be specially encoded.</summary>
            <returns>true if the browser requires VIEWSTATE values to be specially encoded; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix">
            <summary>Gets a value indicating whether the browser requires unique form-action URLs.</summary>
            <returns>true if the browser requires unique form-action URLs; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames">
            <summary>Gets a value indicating whether the browser requires unique name attribute values of multiple HTML &lt;input type="checkbox"&gt; elements.</summary>
            <returns>true if the browser requires unique name attribute values of multiple HTML &lt;input type="checkbox"&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames">
            <summary>Gets a value indicating whether the browser requires unique name attribute values of multiple HTML &lt;input&gt; elements.</summary>
            <returns>true if the browser requires unique name attribute values of multiple HTML &lt;input&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues">
            <summary>Gets a value indicating whether postback data sent by the browser will be UrlEncoded.</summary>
            <returns>true if postback data sent by the browser will be UrlEncoded; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.ScreenBitDepth">
            <summary>Returns the depth of the display, in bits per pixel.</summary>
            <returns>The depth of the display, in bits per pixel. The default is 1.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.ScreenCharactersHeight">
            <summary>Returns the approximate height of the display, in character lines.</summary>
            <returns>The approximate height of the display, in character lines. The default is 6.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.ScreenCharactersWidth">
            <summary>Returns the approximate width of the display, in characters.</summary>
            <returns>The approximate width of the display, in characters. The default is 12.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.ScreenPixelsHeight">
            <summary>Returns the approximate height of the display, in pixels.</summary>
            <returns>The approximate height of the display, in pixels. The default is 72.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.ScreenPixelsWidth">
            <summary>Returns the approximate width of the display, in pixels.</summary>
            <returns>The approximate width of the display, in pixels. The default is 96.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsAccesskeyAttribute">
            <summary>Gets a value indicating whether the browser supports the ACCESSKEY attribute of HTML &lt;a&gt; (anchor) and &lt;input&gt; elements.</summary>
            <returns>true if the browser supports the accesskey attribute of HTML &lt;a&gt;  (anchor) and &lt;input&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsBodyColor">
            <summary>Gets a value indicating whether the browser supports the bgcolor attribute of the HTML &lt;body&gt; element.</summary>
            <returns>true if the browser supports the bgcolor attribute of the HTML &lt;body&gt; element; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsBold">
            <summary>Gets a value indicating whether the browser supports HTML &lt;b&gt; elements to format bold text.</summary>
            <returns>true if the browser supports HTML &lt;b&gt;  elements to format bold text; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsCacheControlMetaTag">
            <summary>Gets a value indicating whether the browser supports the cache-control value for the http-equiv attribute of HTML &lt;meta&gt; elements.</summary>
            <returns>true if the browser supports the cache-control value for the http-equiv attribute of HTML &lt;meta&gt; elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsCallback">
            <summary>Gets a value indicating whether the browser supports callback scripts.</summary>
            <returns>true if the browser supports callback scripts; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsCss">
            <summary>Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</summary>
            <returns>true if the browser supports CSS; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsDivAlign">
            <summary>Gets a value indicating whether the browser supports the align attribute of HTML &lt;div&gt; elements.</summary>
            <returns>true if the browser supports the align attribute of HTML &lt;div&gt; elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsDivNoWrap">
            <summary>Gets a value indicating whether the browser supports the nowrap attribute of HTML &lt;div&gt; elements.</summary>
            <returns>true if the browser supports the nowrap attribute of HTML &lt;div&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue">
            <summary>Gets a value indicating whether the browser supports empty (null) strings in cookie values.</summary>
            <returns>true if the browser supports empty (null) strings in cookie values; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsFontColor">
            <summary>Gets a value indicating whether the browser supports the color attribute of HTML &lt;font&gt; elements.</summary>
            <returns>true if the browser supports the color attribute of HTML &lt;font&gt; elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsFontName">
            <summary>Gets a value indicating whether the browser supports the name attribute of HTML &lt;font&gt; elements.</summary>
            <returns>true if the browser supports the name attribute of HTML &lt;font&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsFontSize">
            <summary>Gets a value indicating whether the browser supports the size attribute of HTML &lt;font&gt; elements.</summary>
            <returns>true if the browser supports the size attribute of HTML &lt;font&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsImageSubmit">
            <summary>Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</summary>
            <returns>true if the browser supports using a custom image in place of a standard form Submit button; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsIModeSymbols">
            <summary>Gets a value indicating whether the browser supports i-mode symbols.</summary>
            <returns>true if the browser supports i-mode symbols; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsInputIStyle">
            <summary>Gets a value indicating whether the browser supports the istyle attribute of HTML &lt;input&gt; elements.</summary>
            <returns>true if the browser supports the istyle attribute of HTML &lt;input&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsInputMode">
            <summary>Gets a value indicating whether the browser supports the mode attribute of HTML &lt;input&gt; elements.</summary>
            <returns>true if the browser supports the mode attribute of HTML &lt;input&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsItalic">
            <summary>Gets a value indicating whether the browser supports HTML &lt;i&gt; elements to format italic text.</summary>
            <returns>true if the browser supports HTML &lt;i&gt; elements to format italic text; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes">
            <summary>Gets a value indicating whether the browser supports J-Phone multimedia attributes.</summary>
            <returns>true if the browser supports J-Phone multimedia attributes; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsJPhoneSymbols">
            <summary>Gets a value indicating whether the browser supports J-Phone–specific picture symbols.</summary>
            <returns>true if the browser supports J-Phone–specific picture symbols; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsQueryStringInFormAction">
            <summary>Gets a value indicating whether the browser supports a query string in the action attribute value of HTML &lt;form&gt; elements.</summary>
            <returns>true if the browser supports a query string in the action attribute value of HTML &lt;form&gt; elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsRedirectWithCookie">
            <summary>Gets a value indicating whether the browser supports cookies on redirection.</summary>
            <returns>true if the browser supports cookies on redirection; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsSelectMultiple">
            <summary>Gets a value indicating whether the browser supports the multiple attribute of HTML &lt;select&gt; elements.</summary>
            <returns>true if the browser supports the multiple attribute of HTML &lt;select&gt; elements; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsUncheck">
            <summary>Gets a value indicating whether the clearing of a checked HTML &lt;input type=checkbox&gt; element is reflected in postback data.</summary>
            <returns>true if the clearing of a checked HTML &lt;input type=checkbox&gt; element is reflected in postback data; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.SupportsXmlHttp">
            <summary>Gets a value indicating whether the browser supports receiving XML over HTTP.</summary>
            <returns>true if the browser supports receiving XML over HTTP; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Tables">
            <summary>Gets a value indicating whether the browser supports HTML &lt;table&gt; elements.</summary>
            <returns>true if the browser supports HTML &lt;table&gt; elements; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Type">
            <summary>Gets the name and major (integer) version number of the browser.</summary>
            <returns>The name and major version number of the browser.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.VBScript">
            <summary>Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</summary>
            <returns>true if the browser supports VBScript; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Version">
            <summary>Gets the full version number (integer and decimal) of the browser as a string.</summary>
            <returns>The full version number of the browser as a string.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.W3CDomVersion">
            <summary>Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</summary>
            <returns>The number of the W3C XML DOM version number that the browser supports.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Win16">
            <summary>Gets a value indicating whether the client is a Win16-based computer.</summary>
            <returns>true if the browser is running on a Win16-based computer; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCapabilitiesBase.Win32">
            <summary>Gets a value indicating whether the client is a Win32-based computer.</summary>
            <returns>true if the client is a Win32-based computer; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:OpenNETCF.Web.DefaultHttpHandler">
            <summary>
            The default handler for HTTP requests
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.IHttpHandler">
            <summary>
            Defines the contract that ASP.NET implements to synchronously process HTTP Web 
            requests using custom HTTP handlers.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.IHttpHandler.ProcessRequest(OpenNETCF.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that 
            implements the <see cref="T:OpenNETCF.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:OpenNETCF.Web.HttpContext"/> object that provides references to the 
            intrinsic server objects (for example, Request, Response, Session, and Server) 
            used to service HTTP requests.</param>
        </member>
        <member name="P:OpenNETCF.Web.IHttpHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the IHttpHandler instance.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.DefaultHttpHandler.ProcessRequest(OpenNETCF.Web.HttpContext)">
            <summary>
            Process the HTTP request
            </summary>
            <param name="context">The current context of the request</param>
        </member>
        <member name="T:OpenNETCF.Web.UI.WebControls.TextBoxMode">
            <summary>
            Specifies the behavior mode of the text box.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.WebControls.TextBoxMode.SingleLine">
            <summary>
            Represents single-line entry mode.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.WebControls.TextBoxMode.MultiLine">
            <summary>
            Represents multiline entry mode.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.WebControls.TextBoxMode.Password">
            <summary>
            Represents password entry mode.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.WebControls.Label">
            <summary>
            Represents a label control, which displays text on a Web page.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.ITextControl">
            <summary>
            Defines the interface a control implements to get or set its text content.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.ITextControl.Text">
            <summary>
            Gets or sets the text content of a control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.WebControls.Label.Text">
            <summary>
            Gets or sets the text caption displayed in the Label control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.StaticFileHandler">
            <summary>
            Provides access to specific file types.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.StaticFileHandler.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <param name="mimeType"></param>
        </member>
        <member name="M:OpenNETCF.Web.StaticFileHandler.ProcessRequest(OpenNETCF.Web.HttpContext)">
            <summary>
            Processes the incoming HTTP request
            </summary>
            <param name="context">The HttpContext for the request</param>
        </member>
        <member name="T:OpenNETCF.Web.PageHandler">
            <summary>
            Padarn Page Handler
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.PageHandler.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the Padarn page handler
            </summary>
            <param name="filePath"></param>
            <param name="mimeType"></param>
        </member>
        <member name="M:OpenNETCF.Web.PageHandler.ProcessRequest(OpenNETCF.Web.HttpContext)">
            <summary>
            Parses the Padarn Page and creates the HTTP response
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:OpenNETCF.Web.PageHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the HttpHandler instance.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.Page">
            <summary>
            Represents an .aspx file, also known as a Web Forms page, 
            requested from a server that hosts a Padarn Web application.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Web.UI.Page"/> class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.RaisePostBackEvent(OpenNETCF.Web.UI.IPostBackEventHandler,System.String)">
            <summary>
            Notifies the server control that caused the postback that it should handle an incoming post back event.
            </summary>
            <param name="sourceControl"></param>
            <param name="eventArgument"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.OnPreLoad(System.EventArgs)">
            <summary>
            Raises the PreLoad event after postback data is loaded into the page server controls but before the OnLoad event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.OnLoadComplete(System.EventArgs)">
            <summary>
            Raises the LoadComplete event at the end of the page load stage.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.OnPreInit(System.EventArgs)">
            <summary>
            Raises the PreInit event at the beginning of page initialization.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.OnInitComplete(System.EventArgs)">
            <summary>
            Raises the InitComplete event after page initialization.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.OnPreRenderComplete(System.EventArgs)">
            <summary>
            Raises the PreRenderComplete event after the OnPreRenderComplete event and before the page is rendered.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.Page.Render(OpenNETCF.Web.UI.HtmlTextWriter)">
            <summary>
            Initializes the HtmlTextWriter object and calls on the child controls of the Page to render.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="E:OpenNETCF.Web.UI.Page.PreInit">
            <summary>
            Occurs at the beginning of page initialization.
            </summary>
        </member>
        <member name="E:OpenNETCF.Web.UI.Page.InitComplete">
            <summary>
            Occurs when page initialization is complete.
            </summary>
        </member>
        <member name="E:OpenNETCF.Web.UI.Page.PreLoad">
            <summary>
            Occurs before the page Load event.
            </summary>
        </member>
        <member name="E:OpenNETCF.Web.UI.Page.LoadComplete">
            <summary>
            Occurs at the end of the load stage of the page's life cycle.
            </summary>
        </member>
        <member name="E:OpenNETCF.Web.UI.Page.PreRender">
            <summary>
            Occurs after the Control object is loaded but prior to rendering.
            </summary>
        </member>
        <member name="E:OpenNETCF.Web.UI.Page.PreRenderComplete">
            <summary>
            Occurs before the page content is rendered.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.Page.Request">
            <summary>
            Gets the <see cref="T:OpenNETCF.Web.HttpRequest"/> object for the requested page.
            </summary>
            <returns>The current <see cref="T:OpenNETCF.Web.HttpRequest"/> associated with the page.</returns>
            <exception cref="T:OpenNETCF.Web.HttpException">Occurs when the <see cref="T:OpenNETCF.Web.HttpRequest"/> object is not available.</exception>
        </member>
        <member name="P:OpenNETCF.Web.UI.Page.Response">
            <summary>
            Gets the <see cref="T:OpenNETCF.Web.HttpResponse"/> object associated with the <see cref="T:OpenNETCF.Web.UI.Page"/> object. This object 
            allows you to send HTTP response data to a client and contains information 
            about that response.
            </summary>
            <returns>The current <see cref="T:OpenNETCF.Web.HttpResponse"/> associated with the page</returns>
            <exception cref="T:OpenNETCF.Web.HttpException">The <see cref="T:OpenNETCF.Web.HttpResponse"/> object is not available. </exception>
        </member>
        <member name="P:OpenNETCF.Web.UI.Page.Session">
            <summary>
            Gets the current Session object provided by Padarn.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.Page.IsPostBack">
            <summary>
            Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.Page.IsReusable">
            <summary>
            Gets or sets a value indicating whether this instance is reusable.
            </summary>
            <value><c>true</c> if this instance is reusable; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:OpenNETCF.Web.SessionState.ISessionIDManager">
            <summary>
            Defines the contract that a custom session-state identifier manager must implement.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionIDManager.Initialize">
            <summary>
            Initializes the SessionIDManager object with information from configuration files.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionIDManager.InitializeRequest(OpenNETCF.Web.HttpContext,System.Boolean,System.Boolean@)">
            <summary>
            Performs per-request initialization of the SessionIDManager object.
            </summary>
            <param name="context"></param>
            <param name="suppressAutoDetectRedirect"></param>
            <param name="supportSessionIDReissue"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionIDManager.GetSessionID(OpenNETCF.Web.HttpContext)">
            <summary>
            Gets the session-identifier value from the current Web request.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionIDManager.CreateSessionID(OpenNETCF.Web.HttpContext)">
            <summary>
            Creates a unique session identifier for the session.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionIDManager.RemoveSessionID(OpenNETCF.Web.HttpContext)">
            <summary>
            Deletes the session-identifier cookie from the HTTP response.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionIDManager.SaveSessionID(OpenNETCF.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)">
            <summary>
            Saves a newly created session identifier to the HTTP response.
            </summary>
            <param name="context"></param>
            <param name="id"></param>
            <param name="redirected"></param>
            <param name="cookieAdded"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionIDManager.Validate(System.String)">
            <summary>
            Gets a value indicating whether a session identifier is valid.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Security.Principal.GenericPrincipal">
            <summary>
            Represents a generic principal.
            </summary>
        </member>
        <member name="T:OpenNETCF.Security.Principal.IPrincipal">
            <summary>
            Defines the basic functionality of a principal object.
            </summary>
        </member>
        <member name="M:OpenNETCF.Security.Principal.IPrincipal.IsInRole(System.String)">
            <summary>
            Determines whether the current principal belongs to the specified role.
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Security.Principal.IPrincipal.Identity">
            <summary>
            Gets the identity of the current principal.
            </summary>
        </member>
        <member name="M:OpenNETCF.Security.Principal.GenericPrincipal.#ctor(OpenNETCF.Security.Principal.IIdentity,System.String[])">
            <summary>
            Initializes a new instance of the GenericPrincipal class from a user identity and an array of role names to which the user represented by that identity belongs.
            </summary>
            <param name="identity"></param>
            <param name="roles"></param>
        </member>
        <member name="M:OpenNETCF.Security.Principal.GenericPrincipal.#ctor(OpenNETCF.Security.Principal.IIdentity)">
            <summary>
            Initializes a new instance of the GenericPrincipal class from a user identity and an array of role names to which the user represented by that identity belongs.
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:OpenNETCF.Security.Principal.GenericPrincipal.IsInRole(System.String)">
            <summary>
            Determines whether the current GenericPrincipal belongs to the specified role.
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Security.Principal.GenericPrincipal.Identity">
            <summary>
            Gets the GenericIdentity of the user represented by the current GenericPrincipal.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpMethod">
            <summary>
            Http methods
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpRawRequestContent.m_startofLine">
            <summary>
            The offset in which to start reading the line data
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpErrorCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.BadRequest">
            <summary>
            The request could not be understood by the server due to malformed syntax.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.Unauthorized">
            <summary>
            The request requires user authentication.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.PaymentRequired">
            <summary>
            This code is reserved for future use.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.Forbidden">
            <summary>
            The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.NotFound">
            <summary>
            The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.MethodNotAllowed">
            <summary>
            The method specified in the Request-Line is not allowed for the resource identified by the Request-URI.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.NotAcceptable">
            <summary>
            The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.ProxyAuthenticationRequired">
            <summary>
            This code is similar to 401 (Unauthorized), but indicates that the client must first authenticate itself with the proxy.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.RequestTimeout">
            <summary>
            The client did not produce a request within the time that the server was prepared to wait.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.Conflict">
            <summary>
            The request could not be completed due to a conflict with the current state of the resource.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.Gone">
            <summary>
            The requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.LengthRequired">
            <summary>
            The server refuses to accept the request without a defined Content- Length.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.PreconditionFailed">
            <summary>
            The precondition given in one or more of the request-header fields evaluated to false when it was tested on the server.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.RequestEntityTooLarge">
            <summary>
            The server is refusing to process a request because the request entity is larger than the server is willing or able to process.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.RequestURITooLong">
            <summary>
            The server is refusing to service the request because the Request-URI is longer than the server is willing to interpret.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.UnsupportedMediaType">
            <summary>
            The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.RequestedRangeNotSatisfiable">
            <summary>
             server SHOULD return a response with this status code if a request included a Range request-header field (section 14.35), and none of the range-specifier values in this field overlap the current extent of the selected resource, 
             and the request did not include an If-Range request-header field. (For byte-ranges, this means that the first- byte-pos of all of the byte-range-spec values were greater than the current length of the selected resource.) 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.ExpectationFailed">
            <summary>
            The expectation given in an Expect request-header field (see section 14.20) could not be met by this server, or, if the server is a proxy, the server has unambiguous evidence that the request could not be met by the next-hop server. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.WebDAVUnprocessableEntity">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.WebDAVLocked">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.WebDAVFailedDependency">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.WebDAVUnorderedCollection">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.WebDAVUpgradeRequired">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.WebDAVRetryWith">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.InternalServerError">
            <summary>
            The server encountered an unexpected condition which prevented it from fulfilling the request.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.NotImplemented">
            <summary>
            The server does not support the functionality required to fulfill the request.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.BadGateway">
            <summary>
            The server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.ServiceUnavailable">
            <summary>
            The server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.GatewayTimeout">
            <summary>
            The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.HTTPVersionNotSupported">
            <summary>
            The server does not support, or refuses to support, the HTTP protocol version that was used in the request message.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.VariantAlsoNegotiates">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.InsufficientStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpErrorCode.BandwidthLimitExceeded">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpCookieMode">
            <summary>
            Specifies how cookies are used for a Web application.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpCookieMode.UseUri">
            <summary>
            The calling feature uses the query string to store an identifier regardless of whether the browser or device supports cookies.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpCookieMode.UseCookies">
            <summary>
            Cookies are used to persist user data regardless of whether the browser or device supports cookies.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpCookieMode.AutoDetect">
            <summary>
            Padarn determines whether the requesting browser or device supports cookies. If the requesting browser or device supports cookies then AutoDetect uses cookies to persist user data; otherwise, an identifier is used in the query string. If the browser or device supports the use of cookies but cookies are currently disabled, cookies are still used by the requesting feature.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpCookieMode.UseDeviceProfile">
            <summary>
            Padarn determines whether to use cookies based on System.Web.HttpBrowserCapabilities setting. If the setting indicates that the browser or device supports cookies, cookies are used; otherwise, an identifier is used in the query string.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpCookieCollection">
            <summary>
            Provides a type-safe way to manipulate HTTP cookies.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.#ctor">
            <summary>
            Initializes a new instance of the HttpCookieCollection class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.Add(OpenNETCF.Web.HttpCookie)">
            <summary>
            Adds the specified cookie to the cookie collection.
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.Remove(System.String)">
            <summary>
            Removes the cookie with the specified name from the collection.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.Clear">
            <summary>
            Clears all cookies from the cookie collection.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies members of the cookie collection to an Array beginning at the specified index of the array.
            </summary>
            <param name="dest"></param>
            <param name="index"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.Get(System.Int32)">
            <summary>
            Returns the cookie with the specified index from the cookie collection.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.Get(System.String)">
            <summary>
            Returns the cookie with the specified name from the cookie collection.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.GetKey(System.Int32)">
            <summary>
            Returns the key (name) of the cookie at the specified numerical index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpCookieCollection.Set(OpenNETCF.Web.HttpCookie)">
            <summary>
            Updates the value of an existing cookie in a cookie collection.
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookieCollection.AllKeys">
            <summary>
            Gets a string array containing all the keys (cookie names) in the cookie collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookieCollection.Item(System.String)">
            <summary>
            Gets the cookie with the specified name from the cookie collection.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpCookieCollection.Item(System.Int32)">
            <summary>
            Gets the cookie with the specified index from the cookie collection.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.HttpContextBase">
            <summary>
            Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpContextBase.#ctor">
            <summary>
            Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpContextBase.GetService(System.Type)">
            <summary>
            When overridden in a derived class, returns an object for the current service type.
            </summary>
            <param name="serviceType"></param>
            <returns>
            The current service type, or null if no service is found.
            </returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpContextBase.AddError(System.Exception)">
            <summary>
            When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.
            </summary>
            <param name="errorInfo"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpContextBase.ClearError">
            <summary>
            When overridden in a derived class, clears all errors for the current HTTP request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpContextBase.AllErrors">
            <summary>
            When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpContextBase.Error">
            <summary>
            When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.
            </summary>
            <value>
            The first exception for the current HTTP request/response process, or null if no errors accumulated during the HTTP request processing.
            </value>
        </member>
        <member name="P:OpenNETCF.Web.HttpContextBase.Request">
            <summary>
            When overridden in a derived class, gets the HttpRequest object for the current HTTP request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpContextBase.Response">
            <summary>
            When overridden in a derived class, gets the HttpResponse object for the current HTTP response.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpCacheability">
            <summary>
            Provides enumerated values that are used to set the Cache-Control HTTP header. 
            </summary>
            <remarks>
            See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information
            </remarks>
        </member>
        <member name="F:OpenNETCF.Web.HttpCacheability.Private">
            <summary>
            Default value. Sets <b>Cache-Control: private</b> to specify that the response is cacheable only on the client and not by shared (proxy server) caches. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpCacheability.NoCache">
            <summary>
            Sets the <b>Cache-Control: no-cache</b> header. Without a field name, the directive applies to the entire request and a shared (proxy server) cache must force a successful revalidation with the origin Web server before satisfying the request. With a field name, the directive applies only to the named field; the rest of the response may be supplied from a shared cache. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpCacheability.Server">
            <summary>
            Specifies that the response is cached only at the origin server. Similar to the NoCache option. Clients receive a <b>Cache-Control: no-cache</b> directive but the document is cached on the origin server. Equivalent to ServerAndNoCache. 
            </summary>
            <remarks><b>This is currently unsupported by Padarn</b></remarks>
        </member>
        <member name="F:OpenNETCF.Web.HttpCacheability.ServerAndNoCache">
            <summary>
            Applies the settings of both Server and NoCache to indicate that the content is cached at the server but all others are explicitly denied the ability to cache the response. 
            </summary>
            <remarks><b>This is currently unsupported by Padarn</b></remarks>
        </member>
        <member name="F:OpenNETCF.Web.HttpCacheability.Public">
            <summary>
            Sets <b>Cache-Control: public</b> to specify that the response is cacheable by clients and shared (proxy) caches. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpCacheability.ServerAndPrivate">
            <summary>
            Indicates that the response is cached at the server and at the client but nowhere else. Proxy servers are not allowed to cache the response. 
            </summary>
            <remarks><b>This is currently unsupported by Padarn</b></remarks>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.VirtualDirectoryMapping">
            <summary>
            Mappings for Padarn virtual directories
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.VirtualDirectoryMapping.#ctor(System.String,System.String)">
            <summary>
            VirtualDirectoryMapping constructor
            </summary>
            <param name="virtualPath"></param>
            <param name="phyiscalPath"></param>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.VirtualDirectoryMapping.PhysicalDirectory">
            <summary>
            Physical directory path
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.VirtualDirectoryMapping.VirtualDirectory">
            <summary>
            Virtual directory name
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.VirtualDirectoryMapping.RequiresAuthentication">
            <summary>
            True if the virtual directory requires authentication, otherwise false
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.CodeBehindAssembly">
            <summary>
            Helper class for loading a code-behind assembly into the Web Server
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.CodeBehindAssembly.LoadFrom(System.String)">
            <summary>
            Loads a code-behind assembly from the specified path.
            </summary>
            <param name="assemblyPath">The path to load the assembly from.</param>
            <returns>An instance of CodeBehindAssembly</returns>
        </member>
        <member name="M:OpenNETCF.Web.CodeBehindAssembly.GetTypesFromBaseType(System.Type)">
            <summary>
            Returns an array of Types with a particular base type.
            </summary>
            <param name="baseType">The base type used to filter the array</param>
            <returns>An array of types of type baseType</returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionStateItemCollection.Clear">
            <summary>
            Removes all values and keys from the session-state collection.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionStateItemCollection.Remove(System.String)">
            <summary>
            Deletes an item from the collection.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.ISessionStateItemCollection.RemoveAt(System.Int32)">
            <summary>
            Deletes an item at a specified index from the collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.ISessionStateItemCollection.Dirty">
            <summary>
            Gets or sets a value indicating whether the collection has been marked as changed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.ISessionStateItemCollection.Item(System.String)">
            <summary>
            Gets or sets a value in the collection by name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.ISessionStateItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets a value in the collection by numerical index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.ISessionStateItemCollection.Keys">
            <summary>
            Gets a collection of the variable names for all values stored in the collection.
            </summary>
        </member>
        <member name="T:SecureBlackbox.SSLSocket.Server.ElServerSSLSocket">
            <summary>
            Summary description for SSLSocketServer.
            </summary>
        </member>
        <member name="T:SecureBlackbox.SSLSocket.ElSSLSocket">
            <summary>
            Summary description for SSLSocket.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpRuntime">
            <summary>
            Provides a set of Padarn run-time services for the current application.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpRuntime.ProcessRequest(OpenNETCF.Web.HttpWorkerRequest)">
            <summary>
            Drives all Padarn Web processing execution.
            </summary>
            <param name="wr"></param>
        </member>
        <member name="T:OpenNETCF.Web.Routing.RouteTable">
            <summary>
            Stores the URL routes for an application
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteTable.#ctor">
            <summary>
            Initializes a new instance of the RouteTable class. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Routing.RouteTable.Routes">
            <summary>
            Gets a collection of objects that derive from the RouteBase class.
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.NameValueFileSectionHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Configuration.IConfigurationSystem">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.IConfigurationSystem.GetConfig(System.String,System.Object)">
            <summary>
            Returns the config object for the specified key.  
            </summary>
            <param name="configKey">Section name of config object to retrieve. </param>
            <param name="context">Application provided context object that gets passed into the Create method of the IConfigurationSectionHandler</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Configuration.IConfigurationSystem.Init">
            <summary>
            Initializes the configuration system. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.DefaultConfigurationSystem">
            <summary>
            Summary description for DefaultConfigurationSystem.
            </summary>
        </member>
        <member name="T:OpenNETCF.Net.NetworkInformation.PhysicalAddress">
            <summary>
            Provides the Media Access Control (MAC) address for a network interface (adapter).
            </summary>
        </member>
        <member name="F:OpenNETCF.Net.NetworkInformation.PhysicalAddress.None">
            <summary>
            Returns a new System.Net.NetworkInformation.PhysicalAddress instance with
            a zero length address. This field is read-only.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the System.Net.NetworkInformation.PhysicalAddress
            class.
            </summary>
            <param name="address">
            A System.Byte array containing the address.
            </param>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)">
            <summary>
            Compares two System.Net.NetworkInformation.PhysicalAddress instances.
            </summary>
            <param name="comparand">
            The System.Net.NetworkInformation.PhysicalAddress to compare to the current
            instance.
            </param>
            <returns>
            true if this instance and the specified instance contain the same address;
            otherwise false.
            </returns>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.PhysicalAddress.GetAddressBytes">
            <summary>
            Returns the address of the current instance.
            </summary>
            <returns>A System.Byte array containing the address.</returns>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.PhysicalAddress.GetHashCode">
            <summary>
            Returns the hash value of a physical address.
            </summary>
            <returns>An integer hash value.</returns>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.PhysicalAddress.ToString">
            <summary>
            Returns the System.String representation of the address of this instance.
            </summary>
            <returns>
            A System.String containing the address contained in this instance.
            </returns>
        </member>
        <member name="T:OpenNETCF.Web.Logging.DefaultLogProvider">
            <summary>
            The default log provider for Padarn.  This provider is used for logging if a specialized logging provider is not specified
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Logging.ILogProvider">
            <summary>
            Interface for Padarn Log Providers
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Logging.ILogProvider.LogPageAccess(OpenNETCF.Web.Logging.LogDataItem)">
            <summary>
            Called on page access
            </summary>
            <param name="dataItem"></param>
        </member>
        <member name="M:OpenNETCF.Web.Logging.ILogProvider.LogPadarnError(System.String,OpenNETCF.Web.Logging.LogDataItem)">
            <summary>
            Called on error conditions
            </summary>
            <param name="errorInfo"></param>
            <param name="dataItem">Log data for the current error, if it exists</param>
        </member>
        <member name="M:OpenNETCF.Web.Logging.ILogProvider.LogRuntimeInfo(OpenNETCF.Web.Logging.ZoneFlags,System.String)">
            <summary>
            Called during certain runtime operations.  Primarily used for debugging Padarn's internal systems.
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:OpenNETCF.Web.Logging.ILogProvider.ServerConfiguration">
            <summary>
            The Padarn configuration state at the time the Provider was created
            </summary>
            <remarks>
            Padarn injects the configuration when the provider is created at startup
            </remarks>
        </member>
        <member name="M:OpenNETCF.Web.Logging.DefaultLogProvider.LogPageAccess(OpenNETCF.Web.Logging.LogDataItem)">
            <summary>
            Called whenever padarn get a request to access a page
            </summary>
            <param name="dataItem">Data related to the access call</param>
        </member>
        <member name="M:OpenNETCF.Web.Logging.DefaultLogProvider.LogPadarnError(System.String,OpenNETCF.Web.Logging.LogDataItem)">
            <summary>
            Called whenever Padarn encounters an internal error
            </summary>
            <param name="errorInfo">Information about the specific error</param>
        </member>
        <member name="M:OpenNETCF.Web.Logging.DefaultLogProvider.LogRuntimeInfo(OpenNETCF.Web.Logging.ZoneFlags,System.String)">
            <summary>
            Called during certain runtime operations.  Primarily used for debugging Padarn's internal systems.
            </summary>
            <param name="info"></param>
            <param name="zoneMask">The zone associated with the incoming information</param>
        </member>
        <member name="P:OpenNETCF.Web.Logging.DefaultLogProvider.ServerConfiguration">
            <summary>
            The Padarn configuration state at the time the Provider was created
            </summary>
            <remarks>
            Padarn injects the configuration when the provider is created at startup
            </remarks>
        </member>
        <member name="T:OpenNETCF.Web.HttpValidationStatus">
            <summary>
            Provides enumerated values that indicate cache validation status. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpValidationStatus.IgnoreThisRequest">
            <summary>
            Indicates that the request is treated as a cache miss and the page is executed. The cache is not invalidated.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpValidationStatus.Invalid">
            <summary>
            Indicates that the cache is invalid. The item is evicted from the cache and the request is handled as a cache miss.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.HttpValidationStatus.Valid">
            <summary>
            Indicates that the cache is valid.   
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpResponseBase">
            <summary>
            Serves as the base class for classes that provides HTTP-response information from an ASP.NET operation.
            </summary>
            <remarks>
            The HttpResponseBase class is an abstract class that contains the same members as the HttpResponse class. The HttpResponseBase class enables you to create derived classes that are like the HttpResponse class, but that you can customize and that work outside the ASP.NET pipeline. When you perform unit testing, you typically use a derived class to implement members that have customized behavior that fulfills the scenario you are testing.
            The HttpResponseWrapper class derives from the HttpResponseBase class. The HttpResponseWrapper class serves as a wrapper for the HttpResponse class. At run time, you typically use an instance of the HttpResponseWrapper class to call members of the HttpResponse object.
            </remarks>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponseBase.ApplyAppPathModifier(System.String)">
            <summary>
            When overridden in a derived class, adds a session ID to the virtual path if the session is using Cookieless session state, and returns the combined path. 
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponseBase.Cache">
            <summary>
            When overridden in a derived class, gets the caching policy (such as expiration time, privacy settings, and vary clauses) of the current Web page.
            </summary>
            <value>The caching policy of the current response.</value>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponseWrapper.Redirect(System.String,System.Boolean)">
            <summary>
            Redirects a request to the specified URL and specifies whether execution of the current process should terminate.
            </summary>
            <param name="url"></param>
            <param name="endResponse"></param>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.HttpRuntimeConfig">
            <summary>
            Holds configuration information for the HTTP run-time settings that determine how to process a request for an ASP.NET application.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.HttpRuntimeConfig.GetConfig">
            <summary>
            Reads the HttpRuntime configuration settings.
            </summary>
            <returns>An instance of HttpRuntimeConfig</returns>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.HttpRuntimeConfig.Reload">
            <summary>
            Reloads the httpRuntime configuration section from the App.Config
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.HttpRuntimeConfig.MaxRequestLength">
            <summary>
            Specifies the limit for the input stream buffering threshold, in KB. This limit can be used to prevent denial of service attacks that are caused, for example, by users posting large files to the server. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.HttpRuntimeConfig.RequestLengthDiskThreshold">
            <summary>
            Specifies the limit for the input stream buffering threshold, in bytes. This value should not exceed the maxRequestLength attribute.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.HttpRuntimeConfigurationHandler">
            <summary>
            Represents the WebServer section in the app.config file
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.HttpRuntimeConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates an instance of ServerConfig from the information in the app.config file
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.ServerConfig">
            <summary>
            Holds configuration information for the Web Server
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.ServerConfig.GetConfig">
            <summary>
            Reads the Server configuration from the application configuration file. 
            </summary>
            <returns>An instance of ServerConfig</returns>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.ServerConfig.Reload">
            <summary>
            Forces the server to reload the configuration settings from the Padarn configuration settings XML file
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.LogProvider">
            <summary>
            Optional path to a custom log provider assembly
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.Port">
            <summary>
            The default port to listen on for incoming requests.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.DefaultDocuments">
            <summary>
            Contains a list of default documents to display when a document is not specified in a request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.LocalIP">
            <summary>
            Gets or sets the value of the local IP address to which Padarn will bind.
            </summary>
            <remarks>
            The Address 0.0.0.0 will be returned if no specific IP address has been configured.  In this case the Padarn server will attach to the first valid IP address it finds.  This is equivalent to the IIS setting of "Unassigned"
            </remarks>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.AuthenticationEnabled">
            <summary>
            Gets a value indicating if authentication is enabled for the server
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.Authentication">
            <summary>
            Gets the authentication configuration for the server
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.Session">
            <summary>
            Gets the session configuration for the server
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.SSLLicenseKey">
            <summary>
            The SSL LicenseKey for the server when running in secure mode (from SecureBlackBox)
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.VirtualDirectories">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.Cookies">
             <summary>
            
             </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.Caching">
             <summary>
            
             </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.VirtualPathProviders">
             <summary>
            
             </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.DocumentRoot">
            <summary>
            The location of the Web Server pages.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.TempRoot">
            <summary>
            The location where Padarn will create its internally-generated temp files (such as for file uploads)
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.MaxConnections">
            <summary>
            The maximum number of concurrent connections the Web Server will allow. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.LoggingEnabled">
            <summary>
            Determines whether server logging is turned on or not
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.LogFileFolder">
            <summary>
            The location in the server's file system where log files are stored when LoggingEnabled is true.  This folder will be created if it doesn't exist
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.LogExtensions">
            <summary>
            The list of file extensions that access to will be logged
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.BrowserDefinitions">
            <summary>
            Gets the Browser definition file directory.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.CertificateName">
            <summary>
            Fully qualified path to the SSL certificate file
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.ServerVersion">
            <summary>
            Provides the version of the currently running Padarn server
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.CertificatePassword">
            <summary>
            Password for the SSL certificate file
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.UseSsl">
            <summary>
            Determines if the server instance uses secure sockets for client connections
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.ServerConfig.CustomErrorFolder">
            <summary>
            Gets the path for custom HTML error pages
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Routing.IRouteHandler">
            <summary>
            Defines the contract that a class must implement in order to process a request for a matching route pattern.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.IRouteHandler.GetHttpHandler(OpenNETCF.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns>An object that processes the request.</returns>
        </member>
        <member name="T:OpenNETCF.Web.HttpRequest">
            <summary>
            Enables Padarn to read the HTTP values sent by a client during a Web request.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpRequest.Abort">
            <summary>
            Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpRequest.#ctor(OpenNETCF.Web.HttpWorkerRequest,OpenNETCF.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="wr"></param>
            <param name="context"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpRequest.ValidateNameValueCollection(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Validates the name value collection created for POST data
            </summary>
            <param name="nvc"></param>
            <param name="collectionName"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpRequest.ValidateString(System.String,System.String,System.String)">
            <summary>
            Validates a string for any cross site scripting
            </summary>
            <param name="s"></param>
            <param name="valueName"></param>
            <param name="collectionName"></param>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.Browser">
            <summary>
            Gets or sets information about the requesting client's browser capabilities.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.Headers">
            <summary>
            Returns the Headers associated with the HttpRequest
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.RawQueryString">
            <summary>
            Returns the raw web request query string
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.LogonUserIdentity">
            <summary>
            Gets the WindowsIdentity type for the current user.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.Url">
            <summary>
            Gets information about the URL of the current request.
            </summary>
            <value>
            A Uri object containing information regarding the URL of the current request.
            </value>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.QueryString">
            <summary>
            Gets the collection of HTTP query string variables.
            </summary>
            <remarks>A NameValueCollection containing the collection of query string variables sent by the client. For example, If the request URL is http://www.opennetcf.com/default.aspx?id=44 then the value of QueryString is "id=44".</remarks>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.IsAuthenticated">
            <summary>
            Gets a value indicating whether the request has been authenticated.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.IsSecureConnection">
            <summary>
            Gets a value indicting whether the HTTP connection uses secure sockets (that is, HTTPS).
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.IsLocal">
            <summary>
            Gets a value indicating whether the request is from the local computer.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.UserHostAddress">
            <summary>
            Gets the IP host address of the remote client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.ContentEncoding">
            <summary>
            Gets or sets the character set of the entity-body.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.ContentType">
            <summary>
            Gets or sets the MIME content type of the incoming request.
            </summary>
            <remarks>A string representing the MIME content type of the incoming request, for example, "text/html".</remarks>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.ContentLength">
            <summary>
            Specifies the length, in bytes, of content sent by the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.AcceptTypes">
            <summary>
            Gets a string array of client-supported MIME accept types.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.HttpMethod">
            <summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.RequestType">
            <summary>
            Gets the HTTP data transfer method (GET or POST) used by the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.Path">
            <summary>
            Gets the virtual path of the current request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.Form">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.Files">
            <summary>
            Gets the collection of files uploaded by the client, in multipart MIME format.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpRequest.RawPostContent">
            <summary>
            The raw http content uploaded by the browser
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.UserControl">
            <summary>
            Represents an .ascx file, also known as a user control, requested from a server 
            that hosts an ASP.NET Web application. The file must be called from a Web Forms 
            page or a parser error will occur.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.SessionState.SessionStateItemCollection">
            <summary>
            A collection of objects stored in session state. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionStateItemCollection.#ctor">
            <summary>
            Creates a new, empty SessionStateItemCollection object.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionStateItemCollection.Clear">
            <summary>
            Removes all values and keys from the session-state collection.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionStateItemCollection.Remove(System.String)">
            <summary>
            Deletes an item from the collection.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionStateItemCollection.RemoveAt(System.Int32)">
            <summary>
            Deletes an item at a specified index from the collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.SessionStateItemCollection.Dirty">
            <summary>
            Gets or sets a value indicating whether the collection has been marked as changed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.SessionStateItemCollection.Item(System.String)">
            <summary>
            Gets or sets a value in the collection by name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.SessionStateItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets a value in the collection by numerical index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Configuration.ConfigurationSettings">
            <summary>
            Provides access to configuration settings in a specified configuration section. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationSettings.Reload">
            <summary>
            Forces the settings provider to re-load the settings from the configuration file.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationSettings.GetConfig(System.String)">
            <summary>
            Returns configuration settings for a user-defined configuration section.  
            </summary>
            <param name="sectionName">The configuration section to read.</param>
            <returns>The configuration settings for sectionName.</returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationSettings.GetConfig(System.String,System.Object)">
            <summary>
            Returns configuration settings for a user-defined configuration section. 
            </summary>
            <param name="sectionName">The configuration section to read.</param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Configuration.ConfigurationSettings.AppSettings">
            <summary>
            Gets configuration settings in the configuration section.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpApplicationFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpApplicationFactory.GetApplicationInstance(OpenNETCF.Web.HttpWorkerRequest)">
            <summary>
            
            </summary>
            <param name="wr"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.AuthenticationConfiguration">
            <summary>
            Descriptions the web server's authentication configuration
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.AuthenticationConfiguration.#ctor">
            <summary>
            Creates an instance of the AuthneticationConfiguration class. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.AuthenticationConfiguration.Mode">
            <summary>
            Gets the authentication mode. Either Basic, Digest or Forms.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.AuthenticationConfiguration.Realm">
            <summary>
            Gets the authentication realm for HTTP Authentication.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.AuthenticationConfiguration.Enabled">
            <summary>
            Gets a boolean value indicating whether authentication is enabled or not. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.AuthenticationConfiguration.Users">
            <summary>
            Describes the users configuration for authentication.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.VirtualPathUtility">
            <summary>
            Provides utility methods for common virtual path operations. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.VirtualPathUtility.GetDirectory(System.String)">
            <summary>
            Returns the directory portion of a virtual path
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>The directory referenced in the virtual path.</returns>
        </member>
        <member name="M:OpenNETCF.Web.VirtualPathUtility.GetExtension(System.String)">
            <summary>
            Retrieves the extension of the file that is referenced in the virtual path. 
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>The file name extension string literal, including the period (.), nullNothingnullptra null reference (Nothing in Visual Basic), or an empty string ("").</returns>
        </member>
        <member name="M:OpenNETCF.Web.VirtualPathUtility.GetFileName(System.String)">
            <summary>
            Retrieves the file name of the file that is referenced in the virtual path.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>The file name literal after the last directory character in virtualPath; otherwise, an empty string (""), if the last character of virtualPath is a directory or volume separator character.</returns>
        </member>
        <member name="M:OpenNETCF.Web.VirtualPathUtility.Combine(System.String,System.String)">
            <summary>
            Combines a base path and a relative path.
            </summary>
            <param name="basePath"></param>
            <param name="relativePath"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)">
            <summary>
            Converts a virtual path to an application absolute path using the specified application path.
            </summary>
            <param name="virtualPath"></param>
            <param name="applicationPath"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.VirtualPathUtility.MakeRelative(System.String,System.String)">
            <summary>
            Returns the relative virtual path from one virtual path containing the root operator (the tilde [~]) to another.
            </summary>
            <param name="fromPath"></param>
            <param name="toPath"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.HttpUtility">
            <summary>
            Provides methods for encoding and decoding URLs when 
            processing Web requests. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncode(System.String)">
            <summary>
            Encodes a URL string.
            </summary>
            <param name="str">The text to encode.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncode(System.Byte[])">
            <summary>
            Converts a byte array into an encoded URL string.
            </summary>
            <param name="bytes">The array of bytes to encode.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
            Encodes a URL string using the specified encoding object.
            </summary>
            <param name="str">The text to encode. </param>
            <param name="e">The Encoding object that specifies the encoding scheme. </param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte array into a URL-encoded string, starting at the specified position in the array and continuing for the specified number of bytes.
            </summary>
            <param name="bytes">The array of bytes to encode. </param>
            <param name="offset">The position in the byte array at which to begin encoding.</param>
            <param name="count">The number of bytes to encode. </param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncodeUnicode(System.String)">
            <summary>
            Encodes a URL string
            </summary>
            <param name="str">The text to encode. </param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])">
            <summary>
            Converts an array of bytes into a URL-encoded array of bytes.
            </summary>
            <param name="bytes">The array of bytes to encode. </param>
            <returns>An encoded array of bytes.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)">
            <summary>
            Converts a string into a URL-encoded array of bytes using the specified encoding object.
            </summary>
            <param name="str">The string to encode </param>
            <param name="e">The Encoding that specifies the encoding scheme. </param>
            <returns>An encoded array of bytes.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts an array of bytes into a URL-encoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.
            </summary>
            <param name="bytes">The array of bytes to encode. </param>
            <param name="offset">The position in the byte array at which to begin encoding.</param>
            <param name="count">The number of bytes to encode. </param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlDecode(System.String)">
            <summary>
            Converts a string that has been encoded for transmission in a URL into a decoded string.
            </summary>
            <param name="str">The string to decode.</param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)">
            <summary>
            Converts a URL-encoded byte array into a decoded string, using the specified encoding object.
            </summary>
            <param name="bytes">The array of bytes to decode.</param>
            <param name="e">The Encoding that specifies the decoding scheme.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)">
            <summary>
            Converts a URL-encoded string into a decoded string, using the specified encoding object.
            </summary>
            <param name="str">The string to decode.</param>
            <param name="e">The Encoding that specifies the decoding scheme.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            Converts a URL-encoded byte array into a decoded string using the specified encoding object, starting at the specified position in the array, and continuing for the specified number of bytes.
            </summary>
            <param name="bytes">The array of bytes to encode. </param>
            <param name="offset">The position in the byte array at which to begin encoding.</param>
            <param name="count">The number of bytes to encode. </param>
            <param name="e">The Encoding object that specifies the decoding scheme. </param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpUtility.HtmlEncode(System.String)">
            <summary>
            Encodes a string to be displayed in a browser.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.HttpCachePolicyBase">
            <summary>
            Serves as the base class for classes that contain methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpCachePolicyBase.SetProxyMaxAge(System.TimeSpan)">
            <summary>
            When overridden in a derived class, sets the Cache-Control: s-maxage HTTP header to the specified time span.
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpCachePolicyBase.AddValidationCallback(OpenNETCF.Web.HttpCacheValidateHandler,System.Object)">
            <summary>
            When overridden in a derived class, registers a validation callback for the current response.
            </summary>
            <param name="handler"></param>
            <param name="data"></param>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.User">
            <summary>
            Defines a User.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.User.#ctor">
            <summary>
            Creates an instance of the User class. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.User.Name">
            <summary>
            The user's username.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.User.Password">
            <summary>
            The user's password.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Hosting.DefaultWorkerRequest">
            <summary>
            Default handler for ASP.NET page requests for the Web Server
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.IsSecure">
            <summary>
            Returns a value indicating whether the connection uses SSL.
            </summary>
            <returns>true if the connection is an SSL connection; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.#ctor(OpenNETCF.Web.Server.SocketWrapperBase,OpenNETCF.Web.Logging.ILogProvider)">
            <summary>
            Initializes an instance of <see cref="T:OpenNETCF.Web.Hosting.DefaultWorkerRequest"/>
            </summary>
            <param name="client"></param>
            <param name="logProvider"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetUriPath">
            <summary>
            Returns the virtual path to the requested URI
            </summary>
            <returns>The path to the requested URI.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.ProcessRequest">
            <summary>
            Process the incoming HTTP request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.EndOfRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetLocalAddress">
            <summary>
            Returns the local address of the web server
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetLocalPort">
            <summary>
            Returns the local port of the web server
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetHttpVersion">
            <summary>
            Return the HTTP version of the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetHttpVerbName">
            <summary>
            Returns the HTTP verb specified in the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetRemoteAddress">
            <summary>
            Returns the remote address of the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.FlushResponse(System.Boolean)">
            <summary>
            Flush the response stream to the client
            </summary>
            <param name="finalFlush"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.HeadersSent">
            <summary>
            Returns a value indicating whether HTTP response headers have been sent to the client for the current request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.CloseConnection">
            <summary>
            Close the connection to the client.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetRequestHeaders">
            <summary>
            Reads the HTTP headers from the request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.ReadRequestHeaders">
            <summary>
            Reads the HTTP headers from the request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)">
            <summary>
            Writes the specifide byte array to the response stream
            </summary>
            <param name="data"></param>
            <param name="length"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.SendCalculatedContentLength(System.Int32)">
            <summary>
            Calculates the length of the response and then writes to the response
            </summary>
            <param name="contentLength"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.SendKnownResponseHeader(System.String,System.String)">
            <summary>
            Sends a well-known HTTP header to the response
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetQueryString">
            <summary>
            Returns the query string from the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.IsClientConnected">
            <summary>
            Returns a value indicating whether the client connection is still active.
            </summary>
            <returns>true if the client connection is still active; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.InitializeResponse">
            <summary>
            initializes the resposen.  Called from ctor and before closing the connection to see if keep alive is available
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.SetDefaultServerHeaderAndStatus">
            <summary>
            Sets the default headers.  Called from ctor and before closing the connection to see if keep alive is available
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetAppPathTranslated">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetEntireRawContent">
            <summary>
            Gets the remaing request content.  Primarly used for posted data
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.DefaultWorkerRequest.GetPartialRawRequestContent(OpenNETCF.Web.Server.SocketWrapperBase)">
            <summary>
            Retreives the entire Http request and stores it in a HttpRawRequestContent
            </summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.DefaultWorkerRequest.KeepConnectionAlive">
            <summary>
            Determins if the connection should be kept alive
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.HtmlTextWriter">
            <summary>
            Writes markup characters and text to a Padarn server control output stream. This class provides formatting capabilities that Padarn pages use when rendering markup to clients.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the HtmlTextWriter class that uses a default tab string.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.RenderBeginTag(OpenNETCF.Web.UI.HtmlTextWriterTag)">
            <summary>
            Writes the opening tag of the markup element associated with the specified HtmlTextWriterTag enumeration value to the output stream.
            </summary>
            <param name="tagKey"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
            <summary>
            Writes the opening tag of the specified markup element to the output stream.
            </summary>
            <param name="tagName"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.RenderEndTag">
            <summary>
            Writes the end tag of a markup element to the output stream.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.AddAttribute(OpenNETCF.Web.UI.HtmlTextWriterAttribute,System.String)">
            <summary>
            Adds the specified markup attribute and value to the opening tag of the element that the HtmlTextWriter object creates with a subsequent call to the RenderBeginTag method.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
            <summary>
            Adds the specified markup attribute and value to the opening tag of the element that the HtmlTextWriter object creates with a subsequent call to the RenderBeginTag method.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.String)">
            <summary>
            Writes the specified string to the output stream, along with any pending tab spacing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Boolean)">
            <summary>
            Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Char[])">
            <summary>
            Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Decimal)">
            <summary>
            Writes the text representation of a decimal value to the text string or stream.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Double)">
            <summary>
            Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing. 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Single)">
            <summary>
            Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Int32)">
            <summary>
            Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Int64)">
            <summary>
            Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Object)">
            <summary>
            Writes the text representation of an object to the output stream, along with any pending tab spacing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.Write(System.Char)">
            <summary>
            Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.WriteBreak">
            <summary>
            Writes a <br /> markup element to the output stream. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
            <summary>
            Writes any tab spacing and the closing tag of the specified markup element.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.HtmlTextWriter.Encoding">
            <summary>
            Gets the encoding that the HtmlTextWriter object uses to write content to the page. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Security.DigestAuthentication">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Security.DigestAuthentication.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Security.DigestAuthentication.AcceptCredentials(OpenNETCF.Web.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="authentication"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Security.DigestAuthentication.OnEndRequest(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:OpenNETCF.Web.Routing.RouteCollection">
            <summary>
            Provides a collection of routes for Padarn routing.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteCollection.#ctor">
            <summary>
            Initializes a new instance of the RouteCollection class. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteCollection.GetVirtualPath(OpenNETCF.Web.Routing.RequestContext,System.String,OpenNETCF.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.
            </summary>
            <param name="requestContext"></param>
            <param name="name"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteCollection.GetVirtualPath(OpenNETCF.Web.Routing.RequestContext,OpenNETCF.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns information about the URL path that is associated with the route, given the specified context and parameter values.
            </summary>
            <param name="requestContext">An object that encapsulates information about the requested route.</param>
            <param name="values">An object that contains the parameters for a route.</param>
            <returns>An object that contains information about the URL path that is associated with the route.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteCollection.GetReadLock">
            <summary>
            Provides an object for managing thread safety when you retrieve an object from the collection.
            </summary>
            <returns>An object that manages thread safety</returns>
        </member>
        <member name="T:OpenNETCF.Web.Parsers.JSON">
            <summary>
            This class encodes and decodes JSON strings.
            Spec. details, see http://www.json.org/
            
            JSON uses Arrays and Objects. These correspond here to the datatypes ArrayList and Hashtable.
            All numbers are parsed to doubles.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.Parsers.JSON.lastErrorIndex">
            <summary>
            On decoding, this value holds the position at which the parse failed (-1 = no error).
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Parsers.JSON.JsonDecode(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An ArrayList, a Hashtable, a double, a string, null, true, or false</returns>
        </member>
        <member name="M:OpenNETCF.Web.Parsers.JSON.JsonEncode(System.Object)">
            <summary>
            Converts a Hashtable / ArrayList object into a JSON string
            </summary>
            <param name="json">A Hashtable / ArrayList</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="M:OpenNETCF.Web.Parsers.JSON.LastDecodeSuccessful">
            <summary>
            On decoding, this function returns the position at which the parse failed (-1 = no error).
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Parsers.JSON.GetLastErrorIndex">
            <summary>
            On decoding, this function returns the position at which the parse failed (-1 = no error).
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Parsers.JSON.GetLastErrorSnippet">
            <summary>
            If a decoding error occurred, this function returns a piece of the JSON string 
            at which the error took place. To ease debugging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Parsers.JSON.IsNumeric(System.Object)">
            <summary>
            Determines if a given object is numeric in any way
            (can be integer, double, etc). C# has no pretty way to do this.
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.SingleTagSectionHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Returns a collection of configuration section values.
            </summary>
            <param name="parent">The configuration settings in a corresponding parent configuration section.</param>
            <param name="context">This parameter is reserved and is null.</param>
            <param name="section">An <see cref="T:System.Xml.XmlNode"/> that contains configuration information from the configuration file.
            Provides direct access to the XML contents of the configuration section.</param>
            <returns>A <see cref="T:System.Collections.Hashtable"/> containing configuration section directives.</returns>
        </member>
        <member name="T:OpenNETCF.Configuration.DictionarySectionHandler">
            <summary>
            Reads key-value pair configuration information for a configuration section.
            </summary>
            <example>
            <code>
            &lt;add key="name" value="text"> - sets key=text
            &lt;remove key="name"> - removes the definition of key
            &lt;clear/> - removes all definitions
            </code>
            </example>
        </member>
        <member name="M:OpenNETCF.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="context"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Configuration.DictionarySectionHandler.KeyAttributeName">
            <summary>
            Make the name of the key attribute configurable by derived classes.
            </summary>
        </member>
        <member name="P:OpenNETCF.Configuration.DictionarySectionHandler.ValueAttributeName">
            <summary>
            Make the name of the value attribute configurable by derived classes.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.CookiesConfiguration">
            <summary>
            Configures properties for cookies used by a Web application. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.CookiesConfiguration.RequireSSL">
            <summary>
            Gets or sets a value indicating whether Secure Sockets Layer (SSL) communication is required. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.CookiesConfiguration.Domain">
            <summary>
            Gets or sets the cookie domain name. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.CookiesConfiguration.HttpOnlyCookies">
            <summary>
            Gets or sets a value indicating whether the support for the browser's HttpOnly cookie is enabled. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.SessionState.SessionStateMode">
            <summary>
            Specifies the session-state mode.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.SessionState.SessionStateMode.Off">
            <summary>
            Session state is disabled.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.SessionState.SessionStateMode.InProc">
            <summary>
            Session state is in process with the Padarn host process.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.SessionState.SessionStateMode.StateServer">
            <summary>
            Session state is in process with an Padarn worker process.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.SessionState.SessionStateMode.SQLServer">
            <summary>
            Session state is using an out-of-process SQL Server database to store state information.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.SessionState.SessionStateMode.Custom">
            <summary>
            Session state is using a custom data store to store session-state information.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Routing.Route">
            <summary>
            Provides properties and methods for defining a route and for obtaining information about the route.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Routing.RouteBase">
            <summary>
            Serves as the base class for all classes that represent a Padarn route.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteBase.#ctor">
            <summary>
            Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteBase.GetRouteData(OpenNETCF.Web.HttpContextBase)">
            <summary>
            When overridden in a derived class, returns route information about the request.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RouteBase.GetVirtualPath(OpenNETCF.Web.Routing.RequestContext,OpenNETCF.Web.Routing.RouteValueDictionary)">
            <summary>
            When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.
            </summary>
            <param name="requestContext"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Routing.Route.#ctor(System.String,OpenNETCF.Web.Routing.IRouteHandler)">
            <summary>
            Initializes a new instance of the Route class, by using the specified URL pattern and handler class. 
            </summary>
            <param name="url"></param>
            <param name="routeHandler"></param>
        </member>
        <member name="M:OpenNETCF.Web.Routing.Route.GetRouteData(OpenNETCF.Web.HttpContextBase)">
            <summary>
            Returns information about the requested route. (Overrides RouteBase.GetRouteData(HttpContextBase).)
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Routing.Route.GetVirtualPath(OpenNETCF.Web.Routing.RequestContext,OpenNETCF.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns information about the URL that is associated with the route. (Overrides RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary).)
            </summary>
            <param name="requestContext"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.Routing.Route.DataTokens">
            <summary>
            Gets or sets custom values that are passed to the route handler, but which are not used to determine whether the route matches a URL pattern.
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.ConfigurationException">
            <summary>
            The exception that is thrown when an error occurs in a configuration setting.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.#ctor">
            <summary>
            Initializes a new instance of the System.Configuration.ConfigurationException class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Configuration.ConfigurationException class with the specified error message. 
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the System.Configuration.ConfigurationException class with the specified error message and System.Exception.InnerException  property.
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="inner">The System.Exception.InnerException , if any, that threw the current exception.</param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the System.Configuration.ConfigurationException class with the specified error message and System.Exception.InnerException and the name of the configuration section node that contains the error.  
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="inner">The System.Exception.InnerException , if any, that threw the current exception.</param>
            <param name="node">The System.Xml.XmlNode that contains the error.</param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the System.Configuration.ConfigurationException class with the specified error message, the name of the configuration file that contains the error, and the line number in the file.
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="filename">The name of the configuration file that contains the error.</param>
            <param name="line">The number of the line that contains the error.</param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the System.Configuration.ConfigurationException with the specified error message and System.Exception.InnerException, the name of the file containing the error, and the line number of the error in the file. 
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="inner">The System.Exception.InnerException , if any, that threw the current exception.</param>
            <param name="filename">The name of the configuration file that contains the error.</param>
            <param name="line">The number of the line that contains the error.</param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the System.Configuration.ConfigurationException with the specified error message and the name of the configuration section containing the error.  
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="node">The System.Xml.XmlNode that contains the error.</param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
            <summary>
            Returns the line number of the configuration section node that contains the error.
            </summary>
            <param name="node">The name of the configuration section node that contains the error.</param>
            <returns>The line number that contains the error.</returns>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
            <summary>
             Returns the name of the file that contains the configuration section node that contains the error.
            </summary>
            <param name="node">The name of the configuration section node that contains the error.</param>
            <returns>The name of the configuration file.</returns>
        </member>
        <member name="T:OpenNETCF.Web.HttpRequestWrapper">
            <summary>
            Encapsulates the HTTP intrinsic object that enables Padarn to read the HTTP values that are sent by a client during a Web request. 
            </summary>
            <remarks>
            The HttpRequestWrapper class derives from the HttpRequestBase class and serves as a wrapper for the HttpRequest class. This class exposes the functionality of the HttpRequest class and exposes the HttpRequestBase type. The HttpRequestBase class enables you to replace the original implementation of the HttpRequest class in your application with a custom implementation, such as when you perform unit testing outside the ASP.NET pipeline.
            </remarks>
        </member>
        <member name="M:OpenNETCF.Web.HttpRequestWrapper.#ctor(OpenNETCF.Web.HttpRequest)">
            <summary>
            Initializes a new instance of the HttpRequestWrapper class by using the specified request object.
            </summary>
            <param name="httpRequest"></param>
        </member>
        <member name="T:OpenNETCF.Web.Hosting.AsyncWorkerRequest">
            <summary>
            Default handler for ASP.NET page requests for the Web Server
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.IsSecure">
            <summary>
            Returns a value indicating whether the connection uses SSL.
            </summary>
            <returns>true if the connection is an SSL connection; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.#ctor(OpenNETCF.Web.Server.SocketWrapperBase,OpenNETCF.Web.Logging.ILogProvider)">
            <summary>
            Initializes an instance of <see cref="T:OpenNETCF.Web.Hosting.DefaultWorkerRequest"/>
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetUriPath">
            <summary>
            Returns the virtual path to the requested URI
            </summary>
            <returns>The path to the requested URI.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.ProcessRequest">
            <summary>
            Process the incoming HTTP request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.EndOfRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetLocalAddress">
            <summary>
            Returns the local address of the web server
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetLocalPort">
            <summary>
            Returns the local port of the web server
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetHttpVersion">
            <summary>
            Return the HTTP version of the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetHttpVerbName">
            <summary>
            Returns the HTTP verb specified in the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetRemoteAddress">
            <summary>
            Returns the remote address of the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.FlushResponse(System.Boolean)">
            <summary>
            Flush the response stream to the client
            </summary>
            <param name="finalFlush"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.CloseConnection">
            <summary>
            Close the connection to the client.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetRequestHeaders">
            <summary>
            Reads the HTTP headers from the request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.ReadRequestHeaders">
            <summary>
            Reads the HTTP headers from the request
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)">
            <summary>
            Writes the specifide byte array to the response stream
            </summary>
            <param name="data"></param>
            <param name="length"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.SendCalculatedContentLength(System.Int32)">
            <summary>
            Calculates the length of the response and then writes to the response
            </summary>
            <param name="contentLength"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.SendKnownResponseHeader(System.String,System.String)">
            <summary>
            Sends a well-known HTTP header to the response
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetQueryString">
            <summary>
            Returns the query string from the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.IsClientConnected">
            <summary>
            Returns a value indicating whether the client connection is still active.
            </summary>
            <returns>true if the client connection is still active; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.InitializeResponse">
            <summary>
            initializes the resposen.  Called from ctor and before closing the connection to see if keep alive is available
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.SetDefaultServerHeaderAndStatus">
            <summary>
            Sets the default headers.  Called from ctor and before closing the connection to see if keep alive is available
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetAppPathTranslated">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetEntireRawContent">
            <summary>
            Gets the remaing request content.  Primarly used for posted data
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.AsyncWorkerRequest.GetPartialRawRequestContent(OpenNETCF.Web.Server.SocketWrapperBase)">
            <summary>
            Retreives the entire Http request and stores it in a HttpRawRequestContent
            </summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.Hosting.AsyncWorkerRequest.KeepConnectionAlive">
            <summary>
            Determins if the connection should be kept alive
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpCacheValidateHandler">
            <summary>
            Represents a method that is called to validate a cached item before the item is served from the cache. 
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <param name="validationStatus"></param>
        </member>
        <member name="T:OpenNETCF.Web.UI.HtmlTextWriterAttribute">
            <summary>
            Specifies the HTML attributes that an HtmlTextWriter or Html32TextWriter object writes to the opening tag of an HTML element when a Web request is processed.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Align">
            <summary>
            Specifies that the HTML align attribute be written to the tag.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Alt">
            <summary>
            Specifies that the HTML alt attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Border">
            <summary>
            Specifies that the HTML border attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Checked">
            <summary>
            Specifies that the HTML checked attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Class">
            <summary>
            Specifies that the HTML class attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Cols">
            <summary>
            Specifies that the HTML cols attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Colspan">
            <summary>
            Specifies that the HTML colspan attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Content">
            <summary>
            Specifies that the HTML content attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Disabled">
            <summary>
            Specifies that the HTML disabled attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Height">
            <summary>
            Specifies that the HTML height attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Href">
            <summary>
            Specifies that the HTML href attribute be written to the tag.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Id">
            <summary>
            Specifies that the HTML id attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Maxlength">
            <summary>
            Specifies that the HTML maxlength attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Multiple">
            <summary>
            Specifies that the HTML multiple attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Name">
            <summary>
            Specifies that the HTML name attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Nowrap">
            <summary>
            Specifies that the HTML nowrap attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Onchange">
            <summary>
            Specifies that the HTML onchange attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Onclick">
            <summary>
            Specifies that the HTML onclick attribute be written to the tag. 
            </summary>    
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.ReadOnly">
            <summary>
            Specifies that the HTML readonly attribute be written to the tag.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Rel">
            <summary>
            Specifies that the HTML rel attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Rows">
            <summary>
            Specifies that the HTML rows attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Rowspan">
            <summary>
            Specifies that the HTML rowspan attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Rules">
            <summary>
            Specifies that the HTML rules attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Scope">
            <summary>
            Specifies that the HTML scope attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Selected">
            <summary>
            Specifies that the HTML selected attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Size">
            <summary>
            Specifies that the HTML size attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Src">
            <summary>
            Specifies that the HTML src attribute be written to the tag.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Style">
            <summary>
            Specifies that the HTML style attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Tabindex">
            <summary>
            Specifies that the HTML tabindex attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Target">
            <summary>
            Specifies that the HTML target attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Title">
            <summary>
            Specifies that the HTML title attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Type">
            <summary>
            Specifies that the HTML type attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Value">
            <summary>
            Specifies that the HTML value attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Width">
            <summary>
            Specifies that the HTML width attribute be written to the tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.UI.HtmlTextWriterAttribute.Wrap">
            <summary>
            Specifies that the HTML wrap attribute be written to the tag. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpResponse">
            <summary>
            Represents the response to a particular HTTP request.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.SetCookie(OpenNETCF.Web.HttpCookie)">
            <summary>
            Updates an existing cookie in the cookie collection.
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.AppendCookie(OpenNETCF.Web.HttpCookie)">
            <summary>
            Adds an HTTP cookie to the intrinsic cookie collection.
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.AppendHeader(System.String,System.String)">
            <summary>
            Append a header to the HttpResponse
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.ClearHeaders">
            <summary>
            Clears all headers from the buffer stream.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.BinaryWrite(System.Byte[])">
            <summary>
            Writes a string of binary characters to the HTTP output stream.
            </summary>
            <param name="buffer">The bytes to write to the output stream.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.BinaryWrite(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a string of binary characters to the HTTP output stream.
            </summary>
            <param name="buffer">The bytes to write to the output stream.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.Write(System.String)">
            <summary>
            Write to the HttpResponse stream
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.WriteLine(System.String)">
            <summary>
            Write a line to the HttpResponse stream
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.Redirect(System.String)">
            <summary>
            Redirect the request to a different URL
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:OpenNETCF.Web.HttpResponse.Flush">
            <summary>
            Flush the HttpResponse stream to the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.ContentLength">
            <summary>
            Specifies the length of the entity body in the HTTP response
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.HeaderEncoding">
            <summary>
            Specifies the character encoding for the HTTP response
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.ContentType">
            <summary>
            Specifies the content type for the HTTP response
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.Cache">
            <summary>
            Gets the caching policy (expiration time, privacy, vary clauses) of a Web page.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.Cookies">
            <summary>
            Gets the response cookie collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.StatusCode">
            <summary>
            Gets or sets the HTTP status code of the output returned to the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.StatusDescription">
            <summary>
            Gets or sets the HTTP status string of the output returned to the client.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.IsRequestBeingRedirected">
            <summary>
            Gets a Boolean value indicating whether the client is being transferred to a new location.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpResponse.IsClientConnected">
            <summary>
            Gets a value indicating whether the client is still connected to the server.
            </summary>
            <value>true if the client is currently connected; otherwise, false.</value>
        </member>
        <member name="T:OpenNETCF.Web.HttpFileCollection">
            <summary>
            Provides access to and organizes files uploaded by a client.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpFileCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies members of the file collection to an Array beginning at the specified index of the array.
            </summary>
            <param name="dest">The destination Array. </param>
            <param name="index">The index of the destination array where copying starts. </param>
        </member>
        <member name="M:OpenNETCF.Web.HttpFileCollection.Get(System.Int32)">
            <summary>
            Returns the HttpPostedFile object with the specified numerical index from the file collection.
            </summary>
            <param name="index">The index of the object to be returned from the file collection.</param>
            <returns>An HttpPostedFile object.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpFileCollection.Get(System.String)">
            <summary>
            Returns the HttpPostedFile object with the specified name from the file collection.
            </summary>
            <param name="name">The name of the object to be returned from a file collection. </param>
            <returns>An HttpPostedFile object.</returns>
        </member>
        <member name="M:OpenNETCF.Web.HttpFileCollection.GetKey(System.Int32)">
            <summary>
            Returns the name of the HttpFileCollection member with the specified numerical index.
            </summary>
            <param name="index">The index of the object name to be returned. </param>
            <returns>The name of the HttpFileCollection member specified by index.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpFileCollection.AllKeys">
            <summary>
            Gets a string array containing the keys (names) of all members in the file collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.HttpFileCollection.Item(System.String)">
            <summary>
            Gets the object with the specified name from the file collection.
            </summary>
            <param name="name">Name of item to be returned.</param>
            <returns>The HttpPostedFile specified by name.</returns>
        </member>
        <member name="P:OpenNETCF.Web.HttpFileCollection.Item(System.Int32)">
            <summary>
            Gets the object with the specified numerical index from the HttpFileCollection.
            </summary>
            <param name="index">The index of the item to get from the file collection. </param>
            <returns>The HttpPostedFile specified by index.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Security.Cryptography.DigestAuthInfo.GetHashCode(System.String)">
            <summary>
            Gets a unique MD5 hash code for the provides password based on RFC 2617
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.Security.Cryptography.DigestAuthInfo.MatchCredentials(System.String)">
            <summary>
            Checks to see if the HashCode generated with the supplied password matches the hash stored in the Digest
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Net.NetworkInformation.NetworkInterface">
            <summary>
            Provides configuration and statistical information for a network interface.
            </summary>
            <summary>
            Provides configuration and statistical information for a network interface.
            </summary>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces">
            <summary>
            Returns objects that describe the network interfaces on the local computer.
            </summary>
            <returns>
            A System.Net.NetworkInformation.NetworkInterface array that contains objects
            that describe the available network interfaces, or an empty array if no interfaces
            are detected.
            </returns>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.NetworkInterface.#ctor(System.Int32,System.String)">
            <summary>
            Creates a NetworkInterface instance
            </summary>
            <param name="index"></param>
            <param name="interfaceName"></param>
        </member>
        <member name="M:OpenNETCF.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress">
            <summary>
            Returns the Media Access Control (MAC) address for this adapter.
            </summary>
            <returns>
            A System.Net.NetworkInformation.PhysicalAddress object that contains the
            physical address.
            </returns>
        </member>
        <member name="P:OpenNETCF.Net.NetworkInformation.NetworkInterface.Name">
            <summary>
            Gets the name of the network adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.NetworkInformation.NetworkInterface.Description">
            <summary>
            Gets a System.String that describes this interface.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.NetworkInformation.NetworkInterface.Id">
            <summary>
            Gets the identifier of the network adapter.
            </summary>
        </member>
        <member name="P:OpenNETCF.Net.NetworkInformation.NetworkInterface.CurrentIpAddress">
            <summary>
            The currently active IP address of the adapter.
            </summary>
            <remarks>After Setting this property, you must Rebind the adapter for it to take effect</remarks>
        </member>
        <member name="T:OpenNETCF.Web.Logging.LogDataItem">
            <summary>
            Contains data about a padarn page access
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Logging.LogDataItem.Headers">
            <summary>
            HTTP Headers passed into the page request
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Logging.LogDataItem.PageName">
            <summary>
            Page being called
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Logging.LogDataItem.RemoteClientIP">
            <summary>
            IP address of the client making the page request
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Logging.LogDataItem.ServerConfiguration">
            <summary>
            Current Padarn configuration settings
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.ConfigurationErrorsException">
            <summary>
            The current value is not one of the EnableSessionState values.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of a ConfigurationErrorsException class
            </summary>
            <param name="message">A message that describes why this ConfigurationErrorsException exception was thrown.</param>
            <param name="inner">The inner exception that caused this ConfigurationErrorsException exception to be thrown.</param>
        </member>
        <member name="M:OpenNETCF.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Initializes a new instance of a ConfigurationErrorsException class
            </summary>
            <param name="message">A message that describes why this ConfigurationErrorsException exception was thrown.</param>
            <param name="inner">The inner exception that caused this ConfigurationErrorsException exception to be thrown.</param>
            <param name="filename">The line number within the configuration file at which this ConfigurationErrorsException exception was thrown.</param>
            <param name="line">The path to the configuration file that caused this ConfigurationErrorsException exception to be thrown.</param>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.UserCollection">
            <summary>
            A collection of Users.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Configuration.UserCollection.Find(System.String)">
            <summary>
            Find a user with a specific username.
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.SessionState.HttpSessionState">
            <summary>
            Provides access to session-state values as well as session-level settings and lifetime management methods.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.HttpSessionState.Abandon">
            <summary>
            Cancels the current session.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.HttpSessionState.Add(System.String,System.Object)">
            <summary>
            Adds a new item to the session-state collection.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.HttpSessionState.Remove(System.String)">
            <summary>
            Deletes an item from the session-state collection.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.HttpSessionState.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to read all the session-state variable names in the current session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.HttpSessionState.Clear">
            <summary>
            Removes all keys and values from the session-state collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.SessionID">
            <summary>
            Gets the unique identifier for the session.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.Timeout">
            <summary>
            Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.CookieMode">
            <summary>
            Gets a value that indicates whether the application is configured for cookieless sessions.
            </summary>
            <remarks>
            Padarn only supports cookie sessions
            </remarks>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.Mode">
            <summary>
            Gets the current session-state mode.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.Item(System.Int32)">
            <summary>
            Gets or sets a session value by numerical index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.Item(System.String)">
            <summary>
            Gets or sets a session value by name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.Count">
            <summary>
            Gets the number of items in the session-state collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.HttpSessionState.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection of session-state values.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpContextWrapper.#ctor(OpenNETCF.Web.HttpContext)">
            <summary>
            Initializes a new instance of the HttpContextWrapper class by using the specified context object.
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.SessionConfiguration.Timeout">
            <summary>
            Timeout in minutes
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.SessionConfiguration.MaxSessions">
            <summary>
            Specifies the maximum number of concurrent sessions.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Configuration.SessionConfiguration.AllowSessionState">
            <summary>
            Specifies whether session state persistence for the Padarn server is enabled. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.WebControls.LinkButton">
            <summary>
            Displays a hyperlink-style button control on a Web page.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event of the LinkButton control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.WebControls.LinkButton.RaisePostBackEvent(System.String)">
            <summary>
            Raises events for the LinkButton control when it posts back to the server.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="E:OpenNETCF.Web.UI.WebControls.LinkButton.Click">
            <summary>
            Occurs when the LinkButton control is clicked.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.WebControls.LinkButton.Text">
            <summary>
            Gets or sets the text caption displayed in the Button control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.UI.ControlCollection">
            <summary>
            Provides a collection container that enables Padarn server controls to maintain a list of their child controls.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.UI.ControlCollection.Add(OpenNETCF.Web.UI.Control)">
            <summary>
            Adds the specified Control object to the collection.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:OpenNETCF.Web.UI.ControlCollection.Clear">
            <summary>
            Removes all controls from the current server control's ControlCollection object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.UI.ControlCollection.Item(System.Int32)">
            <summary>
            Gets a reference to the server control at the specified index location in the ControlCollection object.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.UI.ControlCollection.Count">
            <summary>
            Gets the number of server controls in the ControlCollection object for the specified ASP.NET server control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.SessionState.SessionIDManager">
            <summary>
            Manages unique identifiers for Padarn session state.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.#ctor">
            <summary>
            Creates an instance of the SessionIDManager class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.Initialize">
            <summary>
            Initializes the SessionIDManager object with information from configuration files.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.InitializeRequest(OpenNETCF.Web.HttpContext,System.Boolean,System.Boolean@)">
            <summary>
            Performs per-request initialization of the SessionIDManager object.
            </summary>
            <param name="context"></param>
            <param name="suppressAutoDetectRedirect"></param>
            <param name="supportSessionIDReissue"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.GetSessionID(OpenNETCF.Web.HttpContext)">
            <summary>
            Gets the session-identifier value from the current Web request.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.CreateSessionID(OpenNETCF.Web.HttpContext)">
            <summary>
            Creates a unique session identifier for the session.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.RemoveSessionID(OpenNETCF.Web.HttpContext)">
            <summary>
            Deletes the session-identifier cookie from the HTTP response.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.SaveSessionID(OpenNETCF.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)">
            <summary>
            Saves a newly created session identifier to the HTTP response.
            </summary>
            <param name="context"></param>
            <param name="id"></param>
            <param name="redirected"></param>
            <param name="cookieAdded"></param>
        </member>
        <member name="M:OpenNETCF.Web.SessionState.SessionIDManager.Validate(System.String)">
            <summary>
            Gets a value indicating whether a session identifier is valid.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Web.SessionState.SessionIDManager.SessionIDMaxLength">
            <summary>
            ets the maximum length of a valid session identifier.
            </summary>
            <remarks>
            While session identifiers created by the CreateSessionID method are 24 characters long, the maximum length of a session identifier allowed by the SessionIDManager class is 80 characters.
            </remarks>
        </member>
        <member name="T:OpenNETCF.Web.Routing.VirtualPathData">
            <summary>
            Represents information about the route and virtual path that are the result of generating a URL with the Padarn routing framework.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.VirtualPathData.#ctor(OpenNETCF.Web.Routing.RouteBase,System.String)">
            <summary>
            Initializes a new instance of the VirtualPathData class. 
            </summary>
            <param name="route"></param>
            <param name="virtualPath"></param>
        </member>
        <member name="P:OpenNETCF.Web.Routing.VirtualPathData.Route">
            <summary>
            Gets or sets the route that is used to create the URL.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Routing.VirtualPathData.VirtualPath">
            <summary>
            Gets or sets the URL that was created from the route definition
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Routing.VirtualPathData.DataTokens">
            <summary>
            Gets the collection of custom values for the route definition.
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.Routing.RequestContext">
            <summary>
            Encapsulates information about an HTTP request that matches a defined route.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Routing.RequestContext.#ctor(OpenNETCF.Web.HttpContextBase,OpenNETCF.Web.Routing.RouteData)">
            <summary>
            Initializes a new instance of the RequestContext class.
            </summary>
            <param name="httpContext"></param>
            <param name="routeData"></param>
        </member>
        <member name="P:OpenNETCF.Web.Routing.RequestContext.HttpContext">
            <summary>
            Gets information about the HTTP request.
            </summary>
        </member>
        <member name="P:OpenNETCF.Web.Routing.RequestContext.RouteData">
            <summary>
            Gets information about the requested route.
            </summary>
        </member>
        <member name="T:OpenNETCF.Configuration.NameValueSectionHandler">
            <summary>
            Provides name-value pair configuration information from a configuration section.
            </summary>
        </member>
        <member name="M:OpenNETCF.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="context"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Configuration.NameValueSectionHandler.KeyAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenNETCF.Configuration.NameValueSectionHandler.ValueAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Web.HttpUnhandledException">
            <summary>
            The exception that is thrown when a generic exception occurs.
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.HttpUnhandledException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HttpUnhandledException class with the specified error messages.
            </summary>
            <param name="message">The message displayed to the client when the exception is thrown.</param>
        </member>
        <member name="M:OpenNETCF.Web.HttpUnhandledException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the HttpUnhandledException class with the specified error message and inner exception.
            </summary>
            <param name="message">The message displayed to the client when the exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw the current exception.</param>
        </member>
        <member name="T:OpenNETCF.Web.Hosting.VirtualPathProvider">
            <summary>
            Provides a set of methods that enable a Web application to retrieve resources from a virtual file system. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualPathProvider.Initialize">
            <summary>
            Initializes the VirtualPathProvider instance. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)">
            <summary>
            Gets a value that indicates whether a directory exists in the virtual file system. 
            </summary>
            <param name="virtualDir">The path to the virtual directory.</param>
            <returns><b>true</b> if the directory exists in the virtual file system; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualPathProvider.FileExists(System.String)">
            <summary>
            Gets a value that indicates whether a file exists in the virtual file system.
            </summary>
            <param name="virtualPath">The path to the virtual file.</param>
            <returns><b>true</b> if the file exists in the virtual file system; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)">
            <summary>
            Gets a virtual directory from the virtual file system.
            </summary>
            <param name="virtualDir">The path to the virtual directory.</param>
            <returns>A descendent of the VirtualDirectory class that represents a directory in the virtual file system.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualPathProvider.GetFile(System.String)">
            <summary>
            Gets a virtual file from the virtual file system. 
            </summary>
            <param name="virtualPath">The path to the virtual file.</param>
            <returns>A descendent of the VirtualFile class that represents a file in the virtual file system.</returns>
        </member>
        <member name="M:OpenNETCF.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)">
            <summary>
            Gets a hash for the specified virtual file.
            </summary>
            <param name="virtualPath">Path to the virtual file</param>
            <param name="virtualPathDependencies"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Web.Configuration.CacheLocation">
            <summary>
            Specifies the valid values for controlling the location of the output-cached HTTP response for a resource. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.Configuration.CacheLocation.Any">
            <summary>
            The output cache can be located on the browser client (where the request originated), on a proxy server (or any other server) participating in the request, or on the server where the request was processed.
            </summary>
            <remarks>
            <b>Not currently supported by Padarn.</b>
            </remarks>
        </member>
        <member name="F:OpenNETCF.Web.Configuration.CacheLocation.Client">
            <summary>
            The output cache is located on the browser client where the request originated.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.Configuration.CacheLocation.Downstream">
            <summary>
            The output cache can be stored in any HTTP 1.1 cache-capable devices other than the origin server. This includes proxy servers and the client that made the request.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.Configuration.CacheLocation.Server">
            <summary>
            The output cache is located on the Web server where the request was processed.
            </summary>
            <b>Not currently supported by Padarn.</b>
        </member>
        <member name="F:OpenNETCF.Web.Configuration.CacheLocation.None">
            <summary>
            The output cache is disabled for the requested page.
            </summary>
        </member>
        <member name="F:OpenNETCF.Web.Configuration.CacheLocation.ServerAndClient">
            <summary>
            The output cache can be stored only at the origin server or at the requesting client. Proxy servers are not allowed to cache the response.
            </summary>
            <b>Not currently supported by Padarn.</b>
        </member>
    </members>
</doc>
